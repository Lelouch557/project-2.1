
assembly.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800100  00001930  000019c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001930  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800144  00800144  00001a08  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a08  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00001aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ee9  00000000  00000000  00001b34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000089e  00000000  00000000  00002a1d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000863  00000000  00000000  000032bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  00003b20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000051e  00000000  00000000  00003d40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000475  00000000  00000000  0000425e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  000046d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 f3 06 	jmp	0xde6	; 0xde6 <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e3       	ldi	r30, 0x30	; 48
      7c:	f9 e1       	ldi	r31, 0x19	; 25
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a4 34       	cpi	r26, 0x44	; 68
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	a4 e4       	ldi	r26, 0x44	; 68
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a0 35       	cpi	r26, 0x50	; 80
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 ac 03 	call	0x758	; 0x758 <main>
      9e:	0c 94 96 0c 	jmp	0x192c	; 0x192c <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ser_stdio_putchar>:
	uint8_t c = ser_receive();
	ser_transmit('\r');
	ser_transmit('\n');
	ser_transmit(c);
	return c;
}
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	00 d0       	rcall	.+0      	; 0xac <ser_stdio_putchar+0x6>
      ac:	1f 92       	push	r1
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
      b2:	89 83       	std	Y+1, r24	; 0x01
      b4:	7b 83       	std	Y+3, r23	; 0x03
      b6:	6a 83       	std	Y+2, r22	; 0x02
      b8:	89 81       	ldd	r24, Y+1	; 0x01
      ba:	8a 30       	cpi	r24, 0x0A	; 10
      bc:	21 f4       	brne	.+8      	; 0xc6 <ser_stdio_putchar+0x20>
      be:	8d e0       	ldi	r24, 0x0D	; 13
      c0:	90 e0       	ldi	r25, 0x00	; 0
      c2:	0e 94 17 01 	call	0x22e	; 0x22e <ser_transmit>
      c6:	89 81       	ldd	r24, Y+1	; 0x01
      c8:	88 2f       	mov	r24, r24
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	0e 94 17 01 	call	0x22e	; 0x22e <ser_transmit>
      d0:	80 e0       	ldi	r24, 0x00	; 0
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	0f 90       	pop	r0
      d6:	0f 90       	pop	r0
      d8:	0f 90       	pop	r0
      da:	df 91       	pop	r29
      dc:	cf 91       	pop	r28
      de:	08 95       	ret

000000e0 <ser_init>:
      e0:	cf 93       	push	r28
      e2:	df 93       	push	r29
      e4:	cd b7       	in	r28, 0x3d	; 61
      e6:	de b7       	in	r29, 0x3e	; 62
      e8:	85 ec       	ldi	r24, 0xC5	; 197
      ea:	90 e0       	ldi	r25, 0x00	; 0
      ec:	fc 01       	movw	r30, r24
      ee:	10 82       	st	Z, r1
      f0:	84 ec       	ldi	r24, 0xC4	; 196
      f2:	90 e0       	ldi	r25, 0x00	; 0
      f4:	23 e3       	ldi	r18, 0x33	; 51
      f6:	fc 01       	movw	r30, r24
      f8:	20 83       	st	Z, r18
      fa:	80 ec       	ldi	r24, 0xC0	; 192
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	fc 01       	movw	r30, r24
     100:	10 82       	st	Z, r1
     102:	81 ec       	ldi	r24, 0xC1	; 193
     104:	90 e0       	ldi	r25, 0x00	; 0
     106:	28 e1       	ldi	r18, 0x18	; 24
     108:	fc 01       	movw	r30, r24
     10a:	20 83       	st	Z, r18
     10c:	82 ec       	ldi	r24, 0xC2	; 194
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	26 e0       	ldi	r18, 0x06	; 6
     112:	fc 01       	movw	r30, r24
     114:	20 83       	st	Z, r18
     116:	87 e0       	ldi	r24, 0x07	; 7
     118:	91 e0       	ldi	r25, 0x01	; 1
     11a:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <__iob+0x3>
     11e:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <__iob+0x2>
     122:	00 00       	nop
     124:	df 91       	pop	r29
     126:	cf 91       	pop	r28
     128:	08 95       	ret

0000012a <setup_timer>:
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62
     132:	8a e2       	ldi	r24, 0x2A	; 42
     134:	90 e0       	ldi	r25, 0x00	; 0
     136:	2b ef       	ldi	r18, 0xFB	; 251
     138:	fc 01       	movw	r30, r24
     13a:	20 83       	st	Z, r18
     13c:	84 e2       	ldi	r24, 0x24	; 36
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	2f ef       	ldi	r18, 0xFF	; 255
     142:	fc 01       	movw	r30, r24
     144:	20 83       	st	Z, r18
     146:	8d e3       	ldi	r24, 0x3D	; 61
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	21 e0       	ldi	r18, 0x01	; 1
     14c:	fc 01       	movw	r30, r24
     14e:	20 83       	st	Z, r18
     150:	89 e6       	ldi	r24, 0x69	; 105
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	21 e0       	ldi	r18, 0x01	; 1
     156:	fc 01       	movw	r30, r24
     158:	20 83       	st	Z, r18
     15a:	80 e8       	ldi	r24, 0x80	; 128
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	fc 01       	movw	r30, r24
     160:	10 82       	st	Z, r1
     162:	00 00       	nop
     164:	df 91       	pop	r29
     166:	cf 91       	pop	r28
     168:	08 95       	ret

0000016a <readADC>:
     16a:	cf 93       	push	r28
     16c:	df 93       	push	r29
     16e:	00 d0       	rcall	.+0      	; 0x170 <readADC+0x6>
     170:	1f 92       	push	r1
     172:	cd b7       	in	r28, 0x3d	; 61
     174:	de b7       	in	r29, 0x3e	; 62
     176:	8b 83       	std	Y+3, r24	; 0x03
     178:	8c e7       	ldi	r24, 0x7C	; 124
     17a:	90 e0       	ldi	r25, 0x00	; 0
     17c:	2b 81       	ldd	r18, Y+3	; 0x03
     17e:	fc 01       	movw	r30, r24
     180:	20 83       	st	Z, r18
     182:	8c e7       	ldi	r24, 0x7C	; 124
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	2c e7       	ldi	r18, 0x7C	; 124
     188:	30 e0       	ldi	r19, 0x00	; 0
     18a:	f9 01       	movw	r30, r18
     18c:	20 81       	ld	r18, Z
     18e:	20 64       	ori	r18, 0x40	; 64
     190:	fc 01       	movw	r30, r24
     192:	20 83       	st	Z, r18
     194:	8c e7       	ldi	r24, 0x7C	; 124
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	2c e7       	ldi	r18, 0x7C	; 124
     19a:	30 e0       	ldi	r19, 0x00	; 0
     19c:	f9 01       	movw	r30, r18
     19e:	20 81       	ld	r18, Z
     1a0:	2f 7d       	andi	r18, 0xDF	; 223
     1a2:	fc 01       	movw	r30, r24
     1a4:	20 83       	st	Z, r18
     1a6:	8a e7       	ldi	r24, 0x7A	; 122
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	2a e7       	ldi	r18, 0x7A	; 122
     1ac:	30 e0       	ldi	r19, 0x00	; 0
     1ae:	f9 01       	movw	r30, r18
     1b0:	20 81       	ld	r18, Z
     1b2:	27 60       	ori	r18, 0x07	; 7
     1b4:	fc 01       	movw	r30, r24
     1b6:	20 83       	st	Z, r18
     1b8:	8a e7       	ldi	r24, 0x7A	; 122
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	2a e7       	ldi	r18, 0x7A	; 122
     1be:	30 e0       	ldi	r19, 0x00	; 0
     1c0:	f9 01       	movw	r30, r18
     1c2:	20 81       	ld	r18, Z
     1c4:	20 68       	ori	r18, 0x80	; 128
     1c6:	fc 01       	movw	r30, r24
     1c8:	20 83       	st	Z, r18
     1ca:	8a e7       	ldi	r24, 0x7A	; 122
     1cc:	90 e0       	ldi	r25, 0x00	; 0
     1ce:	2a e7       	ldi	r18, 0x7A	; 122
     1d0:	30 e0       	ldi	r19, 0x00	; 0
     1d2:	f9 01       	movw	r30, r18
     1d4:	20 81       	ld	r18, Z
     1d6:	20 64       	ori	r18, 0x40	; 64
     1d8:	fc 01       	movw	r30, r24
     1da:	20 83       	st	Z, r18
     1dc:	00 00       	nop
     1de:	8a e7       	ldi	r24, 0x7A	; 122
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	fc 01       	movw	r30, r24
     1e4:	80 81       	ld	r24, Z
     1e6:	88 2f       	mov	r24, r24
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	80 74       	andi	r24, 0x40	; 64
     1ec:	99 27       	eor	r25, r25
     1ee:	89 2b       	or	r24, r25
     1f0:	b1 f7       	brne	.-20     	; 0x1de <readADC+0x74>
     1f2:	88 e7       	ldi	r24, 0x78	; 120
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	fc 01       	movw	r30, r24
     1f8:	80 81       	ld	r24, Z
     1fa:	88 2f       	mov	r24, r24
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	9a 83       	std	Y+2, r25	; 0x02
     200:	89 83       	std	Y+1, r24	; 0x01
     202:	89 e7       	ldi	r24, 0x79	; 121
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	fc 01       	movw	r30, r24
     208:	80 81       	ld	r24, Z
     20a:	88 2f       	mov	r24, r24
     20c:	90 e0       	ldi	r25, 0x00	; 0
     20e:	98 2f       	mov	r25, r24
     210:	88 27       	eor	r24, r24
     212:	29 81       	ldd	r18, Y+1	; 0x01
     214:	3a 81       	ldd	r19, Y+2	; 0x02
     216:	82 0f       	add	r24, r18
     218:	93 1f       	adc	r25, r19
     21a:	9a 83       	std	Y+2, r25	; 0x02
     21c:	89 83       	std	Y+1, r24	; 0x01
     21e:	89 81       	ldd	r24, Y+1	; 0x01
     220:	9a 81       	ldd	r25, Y+2	; 0x02
     222:	0f 90       	pop	r0
     224:	0f 90       	pop	r0
     226:	0f 90       	pop	r0
     228:	df 91       	pop	r29
     22a:	cf 91       	pop	r28
     22c:	08 95       	ret

0000022e <ser_transmit>:
     22e:	cf 93       	push	r28
     230:	df 93       	push	r29
     232:	1f 92       	push	r1
     234:	cd b7       	in	r28, 0x3d	; 61
     236:	de b7       	in	r29, 0x3e	; 62
     238:	89 83       	std	Y+1, r24	; 0x01
     23a:	80 ec       	ldi	r24, 0xC0	; 192
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	fc 01       	movw	r30, r24
     240:	80 81       	ld	r24, Z
     242:	88 2f       	mov	r24, r24
     244:	90 e0       	ldi	r25, 0x00	; 0
     246:	80 72       	andi	r24, 0x20	; 32
     248:	99 27       	eor	r25, r25
     24a:	89 2b       	or	r24, r25
     24c:	b1 f3       	breq	.-20     	; 0x23a <ser_transmit+0xc>
     24e:	86 ec       	ldi	r24, 0xC6	; 198
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	29 81       	ldd	r18, Y+1	; 0x01
     254:	fc 01       	movw	r30, r24
     256:	20 83       	st	Z, r18
     258:	00 00       	nop
     25a:	0f 90       	pop	r0
     25c:	df 91       	pop	r29
     25e:	cf 91       	pop	r28
     260:	08 95       	ret

00000262 <up>:
     262:	cf 93       	push	r28
     264:	df 93       	push	r29
     266:	cd b7       	in	r28, 0x3d	; 61
     268:	de b7       	in	r29, 0x3e	; 62
     26a:	64 97       	sbiw	r28, 0x14	; 20
     26c:	0f b6       	in	r0, 0x3f	; 63
     26e:	f8 94       	cli
     270:	de bf       	out	0x3e, r29	; 62
     272:	0f be       	out	0x3f, r0	; 63
     274:	cd bf       	out	0x3d, r28	; 61
     276:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     27a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     27e:	44 e1       	ldi	r20, 0x14	; 20
     280:	42 9f       	mul	r20, r18
     282:	c0 01       	movw	r24, r0
     284:	43 9f       	mul	r20, r19
     286:	90 0d       	add	r25, r0
     288:	11 24       	eor	r1, r1
     28a:	9e 83       	std	Y+6, r25	; 0x06
     28c:	8d 83       	std	Y+5, r24	; 0x05
     28e:	81 e0       	ldi	r24, 0x01	; 1
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	9a 83       	std	Y+2, r25	; 0x02
     294:	89 83       	std	Y+1, r24	; 0x01
     296:	1c 82       	std	Y+4, r1	; 0x04
     298:	1b 82       	std	Y+3, r1	; 0x03
     29a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
     29e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <__data_end+0x1>
     2a2:	01 97       	sbiw	r24, 0x01	; 1
     2a4:	09 f0       	breq	.+2      	; 0x2a8 <up+0x46>
     2a6:	a4 c0       	rjmp	.+328    	; 0x3f0 <up+0x18e>
     2a8:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <__data_end+0x1>
     2ac:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <__data_end>
     2b0:	91 c0       	rjmp	.+290    	; 0x3d4 <up+0x172>
     2b2:	89 81       	ldd	r24, Y+1	; 0x01
     2b4:	9a 81       	ldd	r25, Y+2	; 0x02
     2b6:	01 97       	sbiw	r24, 0x01	; 1
     2b8:	49 f4       	brne	.+18     	; 0x2cc <up+0x6a>
     2ba:	1a 82       	std	Y+2, r1	; 0x02
     2bc:	19 82       	std	Y+1, r1	; 0x01
     2be:	85 e2       	ldi	r24, 0x25	; 37
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <red>
     2c6:	fc 01       	movw	r30, r24
     2c8:	20 83       	st	Z, r18
     2ca:	0d c0       	rjmp	.+26     	; 0x2e6 <up+0x84>
     2cc:	81 e0       	ldi	r24, 0x01	; 1
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	9a 83       	std	Y+2, r25	; 0x02
     2d2:	89 83       	std	Y+1, r24	; 0x01
     2d4:	85 e2       	ldi	r24, 0x25	; 37
     2d6:	90 e0       	ldi	r25, 0x00	; 0
     2d8:	30 91 04 01 	lds	r19, 0x0104	; 0x800104 <red>
     2dc:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <yellow>
     2e0:	23 0f       	add	r18, r19
     2e2:	fc 01       	movw	r30, r24
     2e4:	20 83       	st	Z, r18
     2e6:	8b 81       	ldd	r24, Y+3	; 0x03
     2e8:	9c 81       	ldd	r25, Y+4	; 0x04
     2ea:	01 96       	adiw	r24, 0x01	; 1
     2ec:	9c 83       	std	Y+4, r25	; 0x04
     2ee:	8b 83       	std	Y+3, r24	; 0x03
     2f0:	80 e0       	ldi	r24, 0x00	; 0
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	aa ef       	ldi	r26, 0xFA	; 250
     2f6:	b3 e4       	ldi	r27, 0x43	; 67
     2f8:	8f 83       	std	Y+7, r24	; 0x07
     2fa:	98 87       	std	Y+8, r25	; 0x08
     2fc:	a9 87       	std	Y+9, r26	; 0x09
     2fe:	ba 87       	std	Y+10, r27	; 0x0a
     300:	20 e0       	ldi	r18, 0x00	; 0
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	4a e7       	ldi	r20, 0x7A	; 122
     306:	53 e4       	ldi	r21, 0x43	; 67
     308:	6f 81       	ldd	r22, Y+7	; 0x07
     30a:	78 85       	ldd	r23, Y+8	; 0x08
     30c:	89 85       	ldd	r24, Y+9	; 0x09
     30e:	9a 85       	ldd	r25, Y+10	; 0x0a
     310:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     314:	dc 01       	movw	r26, r24
     316:	cb 01       	movw	r24, r22
     318:	8b 87       	std	Y+11, r24	; 0x0b
     31a:	9c 87       	std	Y+12, r25	; 0x0c
     31c:	ad 87       	std	Y+13, r26	; 0x0d
     31e:	be 87       	std	Y+14, r27	; 0x0e
     320:	20 e0       	ldi	r18, 0x00	; 0
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	40 e8       	ldi	r20, 0x80	; 128
     326:	5f e3       	ldi	r21, 0x3F	; 63
     328:	6b 85       	ldd	r22, Y+11	; 0x0b
     32a:	7c 85       	ldd	r23, Y+12	; 0x0c
     32c:	8d 85       	ldd	r24, Y+13	; 0x0d
     32e:	9e 85       	ldd	r25, Y+14	; 0x0e
     330:	0e 94 aa 07 	call	0xf54	; 0xf54 <__cmpsf2>
     334:	88 23       	and	r24, r24
     336:	2c f4       	brge	.+10     	; 0x342 <up+0xe0>
     338:	81 e0       	ldi	r24, 0x01	; 1
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	98 8b       	std	Y+16, r25	; 0x10
     33e:	8f 87       	std	Y+15, r24	; 0x0f
     340:	3f c0       	rjmp	.+126    	; 0x3c0 <up+0x15e>
     342:	20 e0       	ldi	r18, 0x00	; 0
     344:	3f ef       	ldi	r19, 0xFF	; 255
     346:	4f e7       	ldi	r20, 0x7F	; 127
     348:	57 e4       	ldi	r21, 0x47	; 71
     34a:	6b 85       	ldd	r22, Y+11	; 0x0b
     34c:	7c 85       	ldd	r23, Y+12	; 0x0c
     34e:	8d 85       	ldd	r24, Y+13	; 0x0d
     350:	9e 85       	ldd	r25, Y+14	; 0x0e
     352:	0e 94 09 09 	call	0x1212	; 0x1212 <__gesf2>
     356:	18 16       	cp	r1, r24
     358:	4c f5       	brge	.+82     	; 0x3ac <up+0x14a>
     35a:	20 e0       	ldi	r18, 0x00	; 0
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	40 e2       	ldi	r20, 0x20	; 32
     360:	51 e4       	ldi	r21, 0x41	; 65
     362:	6f 81       	ldd	r22, Y+7	; 0x07
     364:	78 85       	ldd	r23, Y+8	; 0x08
     366:	89 85       	ldd	r24, Y+9	; 0x09
     368:	9a 85       	ldd	r25, Y+10	; 0x0a
     36a:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     36e:	dc 01       	movw	r26, r24
     370:	cb 01       	movw	r24, r22
     372:	bc 01       	movw	r22, r24
     374:	cd 01       	movw	r24, r26
     376:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     37a:	dc 01       	movw	r26, r24
     37c:	cb 01       	movw	r24, r22
     37e:	98 8b       	std	Y+16, r25	; 0x10
     380:	8f 87       	std	Y+15, r24	; 0x0f
     382:	0f c0       	rjmp	.+30     	; 0x3a2 <up+0x140>
     384:	89 e1       	ldi	r24, 0x19	; 25
     386:	90 e0       	ldi	r25, 0x00	; 0
     388:	9a 8b       	std	Y+18, r25	; 0x12
     38a:	89 8b       	std	Y+17, r24	; 0x11
     38c:	89 89       	ldd	r24, Y+17	; 0x11
     38e:	9a 89       	ldd	r25, Y+18	; 0x12
     390:	01 97       	sbiw	r24, 0x01	; 1
     392:	f1 f7       	brne	.-4      	; 0x390 <up+0x12e>
     394:	9a 8b       	std	Y+18, r25	; 0x12
     396:	89 8b       	std	Y+17, r24	; 0x11
     398:	8f 85       	ldd	r24, Y+15	; 0x0f
     39a:	98 89       	ldd	r25, Y+16	; 0x10
     39c:	01 97       	sbiw	r24, 0x01	; 1
     39e:	98 8b       	std	Y+16, r25	; 0x10
     3a0:	8f 87       	std	Y+15, r24	; 0x0f
     3a2:	8f 85       	ldd	r24, Y+15	; 0x0f
     3a4:	98 89       	ldd	r25, Y+16	; 0x10
     3a6:	89 2b       	or	r24, r25
     3a8:	69 f7       	brne	.-38     	; 0x384 <up+0x122>
     3aa:	14 c0       	rjmp	.+40     	; 0x3d4 <up+0x172>
     3ac:	6b 85       	ldd	r22, Y+11	; 0x0b
     3ae:	7c 85       	ldd	r23, Y+12	; 0x0c
     3b0:	8d 85       	ldd	r24, Y+13	; 0x0d
     3b2:	9e 85       	ldd	r25, Y+14	; 0x0e
     3b4:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     3b8:	dc 01       	movw	r26, r24
     3ba:	cb 01       	movw	r24, r22
     3bc:	98 8b       	std	Y+16, r25	; 0x10
     3be:	8f 87       	std	Y+15, r24	; 0x0f
     3c0:	8f 85       	ldd	r24, Y+15	; 0x0f
     3c2:	98 89       	ldd	r25, Y+16	; 0x10
     3c4:	9c 8b       	std	Y+20, r25	; 0x14
     3c6:	8b 8b       	std	Y+19, r24	; 0x13
     3c8:	8b 89       	ldd	r24, Y+19	; 0x13
     3ca:	9c 89       	ldd	r25, Y+20	; 0x14
     3cc:	01 97       	sbiw	r24, 0x01	; 1
     3ce:	f1 f7       	brne	.-4      	; 0x3cc <up+0x16a>
     3d0:	9c 8b       	std	Y+20, r25	; 0x14
     3d2:	8b 8b       	std	Y+19, r24	; 0x13
     3d4:	2b 81       	ldd	r18, Y+3	; 0x03
     3d6:	3c 81       	ldd	r19, Y+4	; 0x04
     3d8:	8d 81       	ldd	r24, Y+5	; 0x05
     3da:	9e 81       	ldd	r25, Y+6	; 0x06
     3dc:	28 17       	cp	r18, r24
     3de:	39 07       	cpc	r19, r25
     3e0:	0c f4       	brge	.+2      	; 0x3e4 <up+0x182>
     3e2:	67 cf       	rjmp	.-306    	; 0x2b2 <up+0x50>
     3e4:	85 e2       	ldi	r24, 0x25	; 37
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <red>
     3ec:	fc 01       	movw	r30, r24
     3ee:	20 83       	st	Z, r18
     3f0:	00 00       	nop
     3f2:	64 96       	adiw	r28, 0x14	; 20
     3f4:	0f b6       	in	r0, 0x3f	; 63
     3f6:	f8 94       	cli
     3f8:	de bf       	out	0x3e, r29	; 62
     3fa:	0f be       	out	0x3f, r0	; 63
     3fc:	cd bf       	out	0x3d, r28	; 61
     3fe:	df 91       	pop	r29
     400:	cf 91       	pop	r28
     402:	08 95       	ret

00000404 <down>:
     404:	cf 93       	push	r28
     406:	df 93       	push	r29
     408:	cd b7       	in	r28, 0x3d	; 61
     40a:	de b7       	in	r29, 0x3e	; 62
     40c:	64 97       	sbiw	r28, 0x14	; 20
     40e:	0f b6       	in	r0, 0x3f	; 63
     410:	f8 94       	cli
     412:	de bf       	out	0x3e, r29	; 62
     414:	0f be       	out	0x3f, r0	; 63
     416:	cd bf       	out	0x3d, r28	; 61
     418:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     41c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     420:	44 e1       	ldi	r20, 0x14	; 20
     422:	42 9f       	mul	r20, r18
     424:	c0 01       	movw	r24, r0
     426:	43 9f       	mul	r20, r19
     428:	90 0d       	add	r25, r0
     42a:	11 24       	eor	r1, r1
     42c:	9e 83       	std	Y+6, r25	; 0x06
     42e:	8d 83       	std	Y+5, r24	; 0x05
     430:	81 e0       	ldi	r24, 0x01	; 1
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	9a 83       	std	Y+2, r25	; 0x02
     436:	89 83       	std	Y+1, r24	; 0x01
     438:	1c 82       	std	Y+4, r1	; 0x04
     43a:	1b 82       	std	Y+3, r1	; 0x03
     43c:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end>
     440:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <__data_end+0x1>
     444:	89 2b       	or	r24, r25
     446:	09 f0       	breq	.+2      	; 0x44a <down+0x46>
     448:	a6 c0       	rjmp	.+332    	; 0x596 <down+0x192>
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <__data_end+0x1>
     452:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <__data_end>
     456:	91 c0       	rjmp	.+290    	; 0x57a <down+0x176>
     458:	89 81       	ldd	r24, Y+1	; 0x01
     45a:	9a 81       	ldd	r25, Y+2	; 0x02
     45c:	01 97       	sbiw	r24, 0x01	; 1
     45e:	49 f4       	brne	.+18     	; 0x472 <down+0x6e>
     460:	1a 82       	std	Y+2, r1	; 0x02
     462:	19 82       	std	Y+1, r1	; 0x01
     464:	85 e2       	ldi	r24, 0x25	; 37
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <green>
     46c:	fc 01       	movw	r30, r24
     46e:	20 83       	st	Z, r18
     470:	0d c0       	rjmp	.+26     	; 0x48c <down+0x88>
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	9a 83       	std	Y+2, r25	; 0x02
     478:	89 83       	std	Y+1, r24	; 0x01
     47a:	85 e2       	ldi	r24, 0x25	; 37
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <green>
     482:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <yellow>
     486:	23 0f       	add	r18, r19
     488:	fc 01       	movw	r30, r24
     48a:	20 83       	st	Z, r18
     48c:	8b 81       	ldd	r24, Y+3	; 0x03
     48e:	9c 81       	ldd	r25, Y+4	; 0x04
     490:	01 96       	adiw	r24, 0x01	; 1
     492:	9c 83       	std	Y+4, r25	; 0x04
     494:	8b 83       	std	Y+3, r24	; 0x03
     496:	80 e0       	ldi	r24, 0x00	; 0
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	aa ef       	ldi	r26, 0xFA	; 250
     49c:	b3 e4       	ldi	r27, 0x43	; 67
     49e:	8f 83       	std	Y+7, r24	; 0x07
     4a0:	98 87       	std	Y+8, r25	; 0x08
     4a2:	a9 87       	std	Y+9, r26	; 0x09
     4a4:	ba 87       	std	Y+10, r27	; 0x0a
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	4a e7       	ldi	r20, 0x7A	; 122
     4ac:	53 e4       	ldi	r21, 0x43	; 67
     4ae:	6f 81       	ldd	r22, Y+7	; 0x07
     4b0:	78 85       	ldd	r23, Y+8	; 0x08
     4b2:	89 85       	ldd	r24, Y+9	; 0x09
     4b4:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b6:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     4ba:	dc 01       	movw	r26, r24
     4bc:	cb 01       	movw	r24, r22
     4be:	8b 87       	std	Y+11, r24	; 0x0b
     4c0:	9c 87       	std	Y+12, r25	; 0x0c
     4c2:	ad 87       	std	Y+13, r26	; 0x0d
     4c4:	be 87       	std	Y+14, r27	; 0x0e
     4c6:	20 e0       	ldi	r18, 0x00	; 0
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	40 e8       	ldi	r20, 0x80	; 128
     4cc:	5f e3       	ldi	r21, 0x3F	; 63
     4ce:	6b 85       	ldd	r22, Y+11	; 0x0b
     4d0:	7c 85       	ldd	r23, Y+12	; 0x0c
     4d2:	8d 85       	ldd	r24, Y+13	; 0x0d
     4d4:	9e 85       	ldd	r25, Y+14	; 0x0e
     4d6:	0e 94 aa 07 	call	0xf54	; 0xf54 <__cmpsf2>
     4da:	88 23       	and	r24, r24
     4dc:	2c f4       	brge	.+10     	; 0x4e8 <down+0xe4>
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	98 8b       	std	Y+16, r25	; 0x10
     4e4:	8f 87       	std	Y+15, r24	; 0x0f
     4e6:	3f c0       	rjmp	.+126    	; 0x566 <down+0x162>
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	3f ef       	ldi	r19, 0xFF	; 255
     4ec:	4f e7       	ldi	r20, 0x7F	; 127
     4ee:	57 e4       	ldi	r21, 0x47	; 71
     4f0:	6b 85       	ldd	r22, Y+11	; 0x0b
     4f2:	7c 85       	ldd	r23, Y+12	; 0x0c
     4f4:	8d 85       	ldd	r24, Y+13	; 0x0d
     4f6:	9e 85       	ldd	r25, Y+14	; 0x0e
     4f8:	0e 94 09 09 	call	0x1212	; 0x1212 <__gesf2>
     4fc:	18 16       	cp	r1, r24
     4fe:	4c f5       	brge	.+82     	; 0x552 <down+0x14e>
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	40 e2       	ldi	r20, 0x20	; 32
     506:	51 e4       	ldi	r21, 0x41	; 65
     508:	6f 81       	ldd	r22, Y+7	; 0x07
     50a:	78 85       	ldd	r23, Y+8	; 0x08
     50c:	89 85       	ldd	r24, Y+9	; 0x09
     50e:	9a 85       	ldd	r25, Y+10	; 0x0a
     510:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     514:	dc 01       	movw	r26, r24
     516:	cb 01       	movw	r24, r22
     518:	bc 01       	movw	r22, r24
     51a:	cd 01       	movw	r24, r26
     51c:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     520:	dc 01       	movw	r26, r24
     522:	cb 01       	movw	r24, r22
     524:	98 8b       	std	Y+16, r25	; 0x10
     526:	8f 87       	std	Y+15, r24	; 0x0f
     528:	0f c0       	rjmp	.+30     	; 0x548 <down+0x144>
     52a:	89 e1       	ldi	r24, 0x19	; 25
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	9a 8b       	std	Y+18, r25	; 0x12
     530:	89 8b       	std	Y+17, r24	; 0x11
     532:	89 89       	ldd	r24, Y+17	; 0x11
     534:	9a 89       	ldd	r25, Y+18	; 0x12
     536:	01 97       	sbiw	r24, 0x01	; 1
     538:	f1 f7       	brne	.-4      	; 0x536 <down+0x132>
     53a:	9a 8b       	std	Y+18, r25	; 0x12
     53c:	89 8b       	std	Y+17, r24	; 0x11
     53e:	8f 85       	ldd	r24, Y+15	; 0x0f
     540:	98 89       	ldd	r25, Y+16	; 0x10
     542:	01 97       	sbiw	r24, 0x01	; 1
     544:	98 8b       	std	Y+16, r25	; 0x10
     546:	8f 87       	std	Y+15, r24	; 0x0f
     548:	8f 85       	ldd	r24, Y+15	; 0x0f
     54a:	98 89       	ldd	r25, Y+16	; 0x10
     54c:	89 2b       	or	r24, r25
     54e:	69 f7       	brne	.-38     	; 0x52a <down+0x126>
     550:	14 c0       	rjmp	.+40     	; 0x57a <down+0x176>
     552:	6b 85       	ldd	r22, Y+11	; 0x0b
     554:	7c 85       	ldd	r23, Y+12	; 0x0c
     556:	8d 85       	ldd	r24, Y+13	; 0x0d
     558:	9e 85       	ldd	r25, Y+14	; 0x0e
     55a:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     55e:	dc 01       	movw	r26, r24
     560:	cb 01       	movw	r24, r22
     562:	98 8b       	std	Y+16, r25	; 0x10
     564:	8f 87       	std	Y+15, r24	; 0x0f
     566:	8f 85       	ldd	r24, Y+15	; 0x0f
     568:	98 89       	ldd	r25, Y+16	; 0x10
     56a:	9c 8b       	std	Y+20, r25	; 0x14
     56c:	8b 8b       	std	Y+19, r24	; 0x13
     56e:	8b 89       	ldd	r24, Y+19	; 0x13
     570:	9c 89       	ldd	r25, Y+20	; 0x14
     572:	01 97       	sbiw	r24, 0x01	; 1
     574:	f1 f7       	brne	.-4      	; 0x572 <down+0x16e>
     576:	9c 8b       	std	Y+20, r25	; 0x14
     578:	8b 8b       	std	Y+19, r24	; 0x13
     57a:	2b 81       	ldd	r18, Y+3	; 0x03
     57c:	3c 81       	ldd	r19, Y+4	; 0x04
     57e:	8d 81       	ldd	r24, Y+5	; 0x05
     580:	9e 81       	ldd	r25, Y+6	; 0x06
     582:	28 17       	cp	r18, r24
     584:	39 07       	cpc	r19, r25
     586:	0c f4       	brge	.+2      	; 0x58a <down+0x186>
     588:	67 cf       	rjmp	.-306    	; 0x458 <down+0x54>
     58a:	85 e2       	ldi	r24, 0x25	; 37
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <green>
     592:	fc 01       	movw	r30, r24
     594:	20 83       	st	Z, r18
     596:	00 00       	nop
     598:	64 96       	adiw	r28, 0x14	; 20
     59a:	0f b6       	in	r0, 0x3f	; 63
     59c:	f8 94       	cli
     59e:	de bf       	out	0x3e, r29	; 62
     5a0:	0f be       	out	0x3f, r0	; 63
     5a2:	cd bf       	out	0x3d, r28	; 61
     5a4:	df 91       	pop	r29
     5a6:	cf 91       	pop	r28
     5a8:	08 95       	ret

000005aa <ser_write>:
     5aa:	cf 93       	push	r28
     5ac:	df 93       	push	r29
     5ae:	00 d0       	rcall	.+0      	; 0x5b0 <ser_write+0x6>
     5b0:	00 d0       	rcall	.+0      	; 0x5b2 <ser_write+0x8>
     5b2:	cd b7       	in	r28, 0x3d	; 61
     5b4:	de b7       	in	r29, 0x3e	; 62
     5b6:	9c 83       	std	Y+4, r25	; 0x04
     5b8:	8b 83       	std	Y+3, r24	; 0x03
     5ba:	1a 82       	std	Y+2, r1	; 0x02
     5bc:	19 82       	std	Y+1, r1	; 0x01
     5be:	10 c0       	rjmp	.+32     	; 0x5e0 <ser_write+0x36>
     5c0:	89 81       	ldd	r24, Y+1	; 0x01
     5c2:	9a 81       	ldd	r25, Y+2	; 0x02
     5c4:	9c 01       	movw	r18, r24
     5c6:	2f 5f       	subi	r18, 0xFF	; 255
     5c8:	3f 4f       	sbci	r19, 0xFF	; 255
     5ca:	3a 83       	std	Y+2, r19	; 0x02
     5cc:	29 83       	std	Y+1, r18	; 0x01
     5ce:	9c 01       	movw	r18, r24
     5d0:	8b 81       	ldd	r24, Y+3	; 0x03
     5d2:	9c 81       	ldd	r25, Y+4	; 0x04
     5d4:	82 0f       	add	r24, r18
     5d6:	93 1f       	adc	r25, r19
     5d8:	fc 01       	movw	r30, r24
     5da:	80 81       	ld	r24, Z
     5dc:	0e 94 17 01 	call	0x22e	; 0x22e <ser_transmit>
     5e0:	89 81       	ldd	r24, Y+1	; 0x01
     5e2:	9a 81       	ldd	r25, Y+2	; 0x02
     5e4:	2b 81       	ldd	r18, Y+3	; 0x03
     5e6:	3c 81       	ldd	r19, Y+4	; 0x04
     5e8:	82 0f       	add	r24, r18
     5ea:	93 1f       	adc	r25, r19
     5ec:	fc 01       	movw	r30, r24
     5ee:	80 81       	ld	r24, Z
     5f0:	88 23       	and	r24, r24
     5f2:	31 f7       	brne	.-52     	; 0x5c0 <ser_write+0x16>
     5f4:	00 00       	nop
     5f6:	0f 90       	pop	r0
     5f8:	0f 90       	pop	r0
     5fa:	0f 90       	pop	r0
     5fc:	0f 90       	pop	r0
     5fe:	df 91       	pop	r29
     600:	cf 91       	pop	r28
     602:	08 95       	ret

00000604 <ser_writeln>:
     604:	cf 93       	push	r28
     606:	df 93       	push	r29
     608:	00 d0       	rcall	.+0      	; 0x60a <ser_writeln+0x6>
     60a:	cd b7       	in	r28, 0x3d	; 61
     60c:	de b7       	in	r29, 0x3e	; 62
     60e:	9a 83       	std	Y+2, r25	; 0x02
     610:	89 83       	std	Y+1, r24	; 0x01
     612:	89 81       	ldd	r24, Y+1	; 0x01
     614:	9a 81       	ldd	r25, Y+2	; 0x02
     616:	0e 94 d5 02 	call	0x5aa	; 0x5aa <ser_write>
     61a:	8d e0       	ldi	r24, 0x0D	; 13
     61c:	0e 94 17 01 	call	0x22e	; 0x22e <ser_transmit>
     620:	8a e0       	ldi	r24, 0x0A	; 10
     622:	0e 94 17 01 	call	0x22e	; 0x22e <ser_transmit>
     626:	00 00       	nop
     628:	0f 90       	pop	r0
     62a:	0f 90       	pop	r0
     62c:	df 91       	pop	r29
     62e:	cf 91       	pop	r28
     630:	08 95       	ret

00000632 <ser_receive>:
     632:	cf 93       	push	r28
     634:	df 93       	push	r29
     636:	cd b7       	in	r28, 0x3d	; 61
     638:	de b7       	in	r29, 0x3e	; 62
     63a:	80 ec       	ldi	r24, 0xC0	; 192
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	fc 01       	movw	r30, r24
     640:	80 81       	ld	r24, Z
     642:	88 23       	and	r24, r24
     644:	d4 f7       	brge	.-12     	; 0x63a <ser_receive+0x8>
     646:	86 ec       	ldi	r24, 0xC6	; 198
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	fc 01       	movw	r30, r24
     64c:	80 81       	ld	r24, Z
     64e:	df 91       	pop	r29
     650:	cf 91       	pop	r28
     652:	08 95       	ret

00000654 <ser_readln>:
     654:	cf 93       	push	r28
     656:	df 93       	push	r29
     658:	cd b7       	in	r28, 0x3d	; 61
     65a:	de b7       	in	r29, 0x3e	; 62
     65c:	28 97       	sbiw	r28, 0x08	; 8
     65e:	0f b6       	in	r0, 0x3f	; 63
     660:	f8 94       	cli
     662:	de bf       	out	0x3e, r29	; 62
     664:	0f be       	out	0x3f, r0	; 63
     666:	cd bf       	out	0x3d, r28	; 61
     668:	9d 83       	std	Y+5, r25	; 0x05
     66a:	8c 83       	std	Y+4, r24	; 0x04
     66c:	7f 83       	std	Y+7, r23	; 0x07
     66e:	6e 83       	std	Y+6, r22	; 0x06
     670:	48 87       	std	Y+8, r20	; 0x08
     672:	1a 82       	std	Y+2, r1	; 0x02
     674:	19 82       	std	Y+1, r1	; 0x01
     676:	0e 94 19 03 	call	0x632	; 0x632 <ser_receive>
     67a:	8b 83       	std	Y+3, r24	; 0x03
     67c:	88 85       	ldd	r24, Y+8	; 0x08
     67e:	88 23       	and	r24, r24
     680:	19 f0       	breq	.+6      	; 0x688 <ser_readln+0x34>
     682:	8b 81       	ldd	r24, Y+3	; 0x03
     684:	0e 94 17 01 	call	0x22e	; 0x22e <ser_transmit>
     688:	8b 81       	ldd	r24, Y+3	; 0x03
     68a:	8d 30       	cpi	r24, 0x0D	; 13
     68c:	39 f4       	brne	.+14     	; 0x69c <ser_readln+0x48>
     68e:	88 85       	ldd	r24, Y+8	; 0x08
     690:	88 23       	and	r24, r24
     692:	f1 f0       	breq	.+60     	; 0x6d0 <ser_readln+0x7c>
     694:	8a e0       	ldi	r24, 0x0A	; 10
     696:	0e 94 17 01 	call	0x22e	; 0x22e <ser_transmit>
     69a:	1a c0       	rjmp	.+52     	; 0x6d0 <ser_readln+0x7c>
     69c:	8e 81       	ldd	r24, Y+6	; 0x06
     69e:	9f 81       	ldd	r25, Y+7	; 0x07
     6a0:	9c 01       	movw	r18, r24
     6a2:	21 50       	subi	r18, 0x01	; 1
     6a4:	31 09       	sbc	r19, r1
     6a6:	89 81       	ldd	r24, Y+1	; 0x01
     6a8:	9a 81       	ldd	r25, Y+2	; 0x02
     6aa:	82 17       	cp	r24, r18
     6ac:	93 07       	cpc	r25, r19
     6ae:	1c f7       	brge	.-58     	; 0x676 <ser_readln+0x22>
     6b0:	89 81       	ldd	r24, Y+1	; 0x01
     6b2:	9a 81       	ldd	r25, Y+2	; 0x02
     6b4:	9c 01       	movw	r18, r24
     6b6:	2f 5f       	subi	r18, 0xFF	; 255
     6b8:	3f 4f       	sbci	r19, 0xFF	; 255
     6ba:	3a 83       	std	Y+2, r19	; 0x02
     6bc:	29 83       	std	Y+1, r18	; 0x01
     6be:	9c 01       	movw	r18, r24
     6c0:	8c 81       	ldd	r24, Y+4	; 0x04
     6c2:	9d 81       	ldd	r25, Y+5	; 0x05
     6c4:	82 0f       	add	r24, r18
     6c6:	93 1f       	adc	r25, r19
     6c8:	2b 81       	ldd	r18, Y+3	; 0x03
     6ca:	fc 01       	movw	r30, r24
     6cc:	20 83       	st	Z, r18
     6ce:	d3 cf       	rjmp	.-90     	; 0x676 <ser_readln+0x22>
     6d0:	00 00       	nop
     6d2:	89 81       	ldd	r24, Y+1	; 0x01
     6d4:	9a 81       	ldd	r25, Y+2	; 0x02
     6d6:	2c 81       	ldd	r18, Y+4	; 0x04
     6d8:	3d 81       	ldd	r19, Y+5	; 0x05
     6da:	82 0f       	add	r24, r18
     6dc:	93 1f       	adc	r25, r19
     6de:	fc 01       	movw	r30, r24
     6e0:	10 82       	st	Z, r1
     6e2:	00 00       	nop
     6e4:	28 96       	adiw	r28, 0x08	; 8
     6e6:	0f b6       	in	r0, 0x3f	; 63
     6e8:	f8 94       	cli
     6ea:	de bf       	out	0x3e, r29	; 62
     6ec:	0f be       	out	0x3f, r0	; 63
     6ee:	cd bf       	out	0x3d, r28	; 61
     6f0:	df 91       	pop	r29
     6f2:	cf 91       	pop	r28
     6f4:	08 95       	ret

000006f6 <showNumber>:
void showNumber(int value){
     6f6:	cf 93       	push	r28
     6f8:	df 93       	push	r29
     6fa:	cd b7       	in	r28, 0x3d	; 61
     6fc:	de b7       	in	r29, 0x3e	; 62
     6fe:	66 97       	sbiw	r28, 0x16	; 22
     700:	0f b6       	in	r0, 0x3f	; 63
     702:	f8 94       	cli
     704:	de bf       	out	0x3e, r29	; 62
     706:	0f be       	out	0x3f, r0	; 63
     708:	cd bf       	out	0x3d, r28	; 61
     70a:	9e 8b       	std	Y+22, r25	; 0x16
     70c:	8d 8b       	std	Y+21, r24	; 0x15
	char str_buf[20];
	sprintf(str_buf,"%d", value);
     70e:	8e 89       	ldd	r24, Y+22	; 0x16
     710:	8f 93       	push	r24
     712:	8d 89       	ldd	r24, Y+21	; 0x15
     714:	8f 93       	push	r24
     716:	85 e1       	ldi	r24, 0x15	; 21
     718:	91 e0       	ldi	r25, 0x01	; 1
     71a:	89 2f       	mov	r24, r25
     71c:	8f 93       	push	r24
     71e:	85 e1       	ldi	r24, 0x15	; 21
     720:	91 e0       	ldi	r25, 0x01	; 1
     722:	8f 93       	push	r24
     724:	ce 01       	movw	r24, r28
     726:	01 96       	adiw	r24, 0x01	; 1
     728:	9f 93       	push	r25
     72a:	8f 93       	push	r24
     72c:	0e 94 ac 09 	call	0x1358	; 0x1358 <sprintf>
     730:	0f 90       	pop	r0
     732:	0f 90       	pop	r0
     734:	0f 90       	pop	r0
     736:	0f 90       	pop	r0
     738:	0f 90       	pop	r0
     73a:	0f 90       	pop	r0
	ser_write(str_buf);
     73c:	ce 01       	movw	r24, r28
     73e:	01 96       	adiw	r24, 0x01	; 1
     740:	0e 94 d5 02 	call	0x5aa	; 0x5aa <ser_write>
}
     744:	00 00       	nop
     746:	66 96       	adiw	r28, 0x16	; 22
     748:	0f b6       	in	r0, 0x3f	; 63
     74a:	f8 94       	cli
     74c:	de bf       	out	0x3e, r29	; 62
     74e:	0f be       	out	0x3f, r0	; 63
     750:	cd bf       	out	0x3d, r28	; 61
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
     756:	08 95       	ret

00000758 <main>:
int main() {
     758:	0f 93       	push	r16
     75a:	1f 93       	push	r17
     75c:	cf 93       	push	r28
     75e:	df 93       	push	r29
     760:	cd b7       	in	r28, 0x3d	; 61
     762:	de b7       	in	r29, 0x3e	; 62
     764:	c7 56       	subi	r28, 0x67	; 103
     766:	d1 09       	sbc	r29, r1
     768:	0f b6       	in	r0, 0x3f	; 63
     76a:	f8 94       	cli
     76c:	de bf       	out	0x3e, r29	; 62
     76e:	0f be       	out	0x3f, r0	; 63
     770:	cd bf       	out	0x3d, r28	; 61
	setup_timer();
     772:	0e 94 95 00 	call	0x12a	; 0x12a <setup_timer>
	ser_init();
     776:	0e 94 70 00 	call	0xe0	; 0xe0 <ser_init>

	char in_buf[30];
	DDRD = 0b11111011;
     77a:	8a e2       	ldi	r24, 0x2A	; 42
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	2b ef       	ldi	r18, 0xFB	; 251
     780:	fc 01       	movw	r30, r24
     782:	20 83       	st	Z, r18
	DDRB = 0xff;
     784:	84 e2       	ldi	r24, 0x24	; 36
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	2f ef       	ldi	r18, 0xFF	; 255
     78a:	fc 01       	movw	r30, r24
     78c:	20 83       	st	Z, r18
	PORTB = red;
     78e:	85 e2       	ldi	r24, 0x25	; 37
     790:	90 e0       	ldi	r25, 0x00	; 0
     792:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <red>
     796:	fc 01       	movw	r30, r24
     798:	20 83       	st	Z, r18
	int16_t count = 0;
     79a:	1a 82       	std	Y+2, r1	; 0x02
     79c:	19 82       	std	Y+1, r1	; 0x01
	
	ser_writeln("SETUP DONE.");
     79e:	88 e1       	ldi	r24, 0x18	; 24
     7a0:	91 e0       	ldi	r25, 0x01	; 1
     7a2:	0e 94 02 03 	call	0x604	; 0x604 <ser_writeln>
	
	while (1) {
		ser_readln(in_buf, sizeof(in_buf), 1);
     7a6:	ce 01       	movw	r24, r28
     7a8:	86 5b       	subi	r24, 0xB6	; 182
     7aa:	9f 4f       	sbci	r25, 0xFF	; 255
     7ac:	41 e0       	ldi	r20, 0x01	; 1
     7ae:	6e e1       	ldi	r22, 0x1E	; 30
     7b0:	70 e0       	ldi	r23, 0x00	; 0
     7b2:	0e 94 2a 03 	call	0x654	; 0x654 <ser_readln>
     7b6:	80 e0       	ldi	r24, 0x00	; 0
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	a8 e4       	ldi	r26, 0x48	; 72
     7bc:	b2 e4       	ldi	r27, 0x42	; 66
     7be:	8e 8b       	std	Y+22, r24	; 0x16
     7c0:	9f 8b       	std	Y+23, r25	; 0x17
     7c2:	a8 8f       	std	Y+24, r26	; 0x18
     7c4:	b9 8f       	std	Y+25, r27	; 0x19

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	30 e0       	ldi	r19, 0x00	; 0
     7ca:	4a e7       	ldi	r20, 0x7A	; 122
     7cc:	53 e4       	ldi	r21, 0x43	; 67
     7ce:	6e 89       	ldd	r22, Y+22	; 0x16
     7d0:	7f 89       	ldd	r23, Y+23	; 0x17
     7d2:	88 8d       	ldd	r24, Y+24	; 0x18
     7d4:	99 8d       	ldd	r25, Y+25	; 0x19
     7d6:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     7da:	dc 01       	movw	r26, r24
     7dc:	cb 01       	movw	r24, r22
     7de:	8a 8f       	std	Y+26, r24	; 0x1a
     7e0:	9b 8f       	std	Y+27, r25	; 0x1b
     7e2:	ac 8f       	std	Y+28, r26	; 0x1c
     7e4:	bd 8f       	std	Y+29, r27	; 0x1d
	if (__tmp < 1.0)
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e8       	ldi	r20, 0x80	; 128
     7ec:	5f e3       	ldi	r21, 0x3F	; 63
     7ee:	6a 8d       	ldd	r22, Y+26	; 0x1a
     7f0:	7b 8d       	ldd	r23, Y+27	; 0x1b
     7f2:	8c 8d       	ldd	r24, Y+28	; 0x1c
     7f4:	9d 8d       	ldd	r25, Y+29	; 0x1d
     7f6:	0e 94 aa 07 	call	0xf54	; 0xf54 <__cmpsf2>
     7fa:	88 23       	and	r24, r24
     7fc:	2c f4       	brge	.+10     	; 0x808 <main+0xb0>
		__ticks = 1;
     7fe:	81 e0       	ldi	r24, 0x01	; 1
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	9f 8f       	std	Y+31, r25	; 0x1f
     804:	8e 8f       	std	Y+30, r24	; 0x1e
     806:	3f c0       	rjmp	.+126    	; 0x886 <main+0x12e>
	else if (__tmp > 65535)
     808:	20 e0       	ldi	r18, 0x00	; 0
     80a:	3f ef       	ldi	r19, 0xFF	; 255
     80c:	4f e7       	ldi	r20, 0x7F	; 127
     80e:	57 e4       	ldi	r21, 0x47	; 71
     810:	6a 8d       	ldd	r22, Y+26	; 0x1a
     812:	7b 8d       	ldd	r23, Y+27	; 0x1b
     814:	8c 8d       	ldd	r24, Y+28	; 0x1c
     816:	9d 8d       	ldd	r25, Y+29	; 0x1d
     818:	0e 94 09 09 	call	0x1212	; 0x1212 <__gesf2>
     81c:	18 16       	cp	r1, r24
     81e:	4c f5       	brge	.+82     	; 0x872 <main+0x11a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     820:	20 e0       	ldi	r18, 0x00	; 0
     822:	30 e0       	ldi	r19, 0x00	; 0
     824:	40 e2       	ldi	r20, 0x20	; 32
     826:	51 e4       	ldi	r21, 0x41	; 65
     828:	6e 89       	ldd	r22, Y+22	; 0x16
     82a:	7f 89       	ldd	r23, Y+23	; 0x17
     82c:	88 8d       	ldd	r24, Y+24	; 0x18
     82e:	99 8d       	ldd	r25, Y+25	; 0x19
     830:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     834:	dc 01       	movw	r26, r24
     836:	cb 01       	movw	r24, r22
     838:	bc 01       	movw	r22, r24
     83a:	cd 01       	movw	r24, r26
     83c:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     840:	dc 01       	movw	r26, r24
     842:	cb 01       	movw	r24, r22
     844:	9f 8f       	std	Y+31, r25	; 0x1f
     846:	8e 8f       	std	Y+30, r24	; 0x1e
     848:	0f c0       	rjmp	.+30     	; 0x868 <main+0x110>
     84a:	89 e1       	ldi	r24, 0x19	; 25
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	99 a3       	std	Y+33, r25	; 0x21
     850:	88 a3       	std	Y+32, r24	; 0x20
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     852:	88 a1       	ldd	r24, Y+32	; 0x20
     854:	99 a1       	ldd	r25, Y+33	; 0x21
     856:	01 97       	sbiw	r24, 0x01	; 1
     858:	f1 f7       	brne	.-4      	; 0x856 <main+0xfe>
     85a:	99 a3       	std	Y+33, r25	; 0x21
     85c:	88 a3       	std	Y+32, r24	; 0x20
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     85e:	8e 8d       	ldd	r24, Y+30	; 0x1e
     860:	9f 8d       	ldd	r25, Y+31	; 0x1f
     862:	01 97       	sbiw	r24, 0x01	; 1
     864:	9f 8f       	std	Y+31, r25	; 0x1f
     866:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     868:	8e 8d       	ldd	r24, Y+30	; 0x1e
     86a:	9f 8d       	ldd	r25, Y+31	; 0x1f
     86c:	89 2b       	or	r24, r25
     86e:	69 f7       	brne	.-38     	; 0x84a <main+0xf2>
     870:	14 c0       	rjmp	.+40     	; 0x89a <main+0x142>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     872:	6a 8d       	ldd	r22, Y+26	; 0x1a
     874:	7b 8d       	ldd	r23, Y+27	; 0x1b
     876:	8c 8d       	ldd	r24, Y+28	; 0x1c
     878:	9d 8d       	ldd	r25, Y+29	; 0x1d
     87a:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     87e:	dc 01       	movw	r26, r24
     880:	cb 01       	movw	r24, r22
     882:	9f 8f       	std	Y+31, r25	; 0x1f
     884:	8e 8f       	std	Y+30, r24	; 0x1e
     886:	8e 8d       	ldd	r24, Y+30	; 0x1e
     888:	9f 8d       	ldd	r25, Y+31	; 0x1f
     88a:	9b a3       	std	Y+35, r25	; 0x23
     88c:	8a a3       	std	Y+34, r24	; 0x22
     88e:	8a a1       	ldd	r24, Y+34	; 0x22
     890:	9b a1       	ldd	r25, Y+35	; 0x23
     892:	01 97       	sbiw	r24, 0x01	; 1
     894:	f1 f7       	brne	.-4      	; 0x892 <main+0x13a>
     896:	9b a3       	std	Y+35, r25	; 0x23
     898:	8a a3       	std	Y+34, r24	; 0x22
		_delay_ms(50);
		if(strcmp(in_buf,"LIGHT") == 0){
     89a:	ce 01       	movw	r24, r28
     89c:	86 5b       	subi	r24, 0xB6	; 182
     89e:	9f 4f       	sbci	r25, 0xFF	; 255
     8a0:	64 e2       	ldi	r22, 0x24	; 36
     8a2:	71 e0       	ldi	r23, 0x01	; 1
     8a4:	0e 94 a3 09 	call	0x1346	; 0x1346 <strcmp>
     8a8:	89 2b       	or	r24, r25
     8aa:	49 f4       	brne	.+18     	; 0x8be <main+0x166>
			//LICHTSENSEOR
			int ADCvalue = readADC(1);
     8ac:	81 e0       	ldi	r24, 0x01	; 1
     8ae:	0e 94 b5 00 	call	0x16a	; 0x16a <readADC>
     8b2:	98 87       	std	Y+8, r25	; 0x08
     8b4:	8f 83       	std	Y+7, r24	; 0x07
			showNumber(ADCvalue);
     8b6:	8f 81       	ldd	r24, Y+7	; 0x07
     8b8:	98 85       	ldd	r25, Y+8	; 0x08
     8ba:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <showNumber>
		}

		if(strcmp(in_buf,"TEMP") == 0){
     8be:	ce 01       	movw	r24, r28
     8c0:	86 5b       	subi	r24, 0xB6	; 182
     8c2:	9f 4f       	sbci	r25, 0xFF	; 255
     8c4:	6a e2       	ldi	r22, 0x2A	; 42
     8c6:	71 e0       	ldi	r23, 0x01	; 1
     8c8:	0e 94 a3 09 	call	0x1346	; 0x1346 <strcmp>
     8cc:	89 2b       	or	r24, r25
     8ce:	09 f0       	breq	.+2      	; 0x8d2 <main+0x17a>
     8d0:	7d c0       	rjmp	.+250    	; 0x9cc <__stack+0xcd>
			int ADCvalue = readADC(3);
     8d2:	83 e0       	ldi	r24, 0x03	; 3
     8d4:	0e 94 b5 00 	call	0x16a	; 0x16a <readADC>
     8d8:	9a 87       	std	Y+10, r25	; 0x0a
     8da:	89 87       	std	Y+9, r24	; 0x09
			
			float voltage = ADCvalue * 5.0;
     8dc:	89 85       	ldd	r24, Y+9	; 0x09
     8de:	9a 85       	ldd	r25, Y+10	; 0x0a
     8e0:	09 2e       	mov	r0, r25
     8e2:	00 0c       	add	r0, r0
     8e4:	aa 0b       	sbc	r26, r26
     8e6:	bb 0b       	sbc	r27, r27
     8e8:	bc 01       	movw	r22, r24
     8ea:	cd 01       	movw	r24, r26
     8ec:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__floatsisf>
     8f0:	dc 01       	movw	r26, r24
     8f2:	cb 01       	movw	r24, r22
     8f4:	20 e0       	ldi	r18, 0x00	; 0
     8f6:	30 e0       	ldi	r19, 0x00	; 0
     8f8:	40 ea       	ldi	r20, 0xA0	; 160
     8fa:	50 e4       	ldi	r21, 0x40	; 64
     8fc:	bc 01       	movw	r22, r24
     8fe:	cd 01       	movw	r24, r26
     900:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     904:	dc 01       	movw	r26, r24
     906:	cb 01       	movw	r24, r22
     908:	8b 87       	std	Y+11, r24	; 0x0b
     90a:	9c 87       	std	Y+12, r25	; 0x0c
     90c:	ad 87       	std	Y+13, r26	; 0x0d
     90e:	be 87       	std	Y+14, r27	; 0x0e
			voltage /= 1024.0;
     910:	20 e0       	ldi	r18, 0x00	; 0
     912:	30 e0       	ldi	r19, 0x00	; 0
     914:	40 e8       	ldi	r20, 0x80	; 128
     916:	54 e4       	ldi	r21, 0x44	; 68
     918:	6b 85       	ldd	r22, Y+11	; 0x0b
     91a:	7c 85       	ldd	r23, Y+12	; 0x0c
     91c:	8d 85       	ldd	r24, Y+13	; 0x0d
     91e:	9e 85       	ldd	r25, Y+14	; 0x0e
     920:	0e 94 af 07 	call	0xf5e	; 0xf5e <__divsf3>
     924:	dc 01       	movw	r26, r24
     926:	cb 01       	movw	r24, r22
     928:	8b 87       	std	Y+11, r24	; 0x0b
     92a:	9c 87       	std	Y+12, r25	; 0x0c
     92c:	ad 87       	std	Y+13, r26	; 0x0d
     92e:	be 87       	std	Y+14, r27	; 0x0e
			
			int v = ((voltage - 0.5) * 100)/ 10;
     930:	20 e0       	ldi	r18, 0x00	; 0
     932:	30 e0       	ldi	r19, 0x00	; 0
     934:	40 e0       	ldi	r20, 0x00	; 0
     936:	5f e3       	ldi	r21, 0x3F	; 63
     938:	6b 85       	ldd	r22, Y+11	; 0x0b
     93a:	7c 85       	ldd	r23, Y+12	; 0x0c
     93c:	8d 85       	ldd	r24, Y+13	; 0x0d
     93e:	9e 85       	ldd	r25, Y+14	; 0x0e
     940:	0e 94 3d 07 	call	0xe7a	; 0xe7a <__subsf3>
     944:	dc 01       	movw	r26, r24
     946:	cb 01       	movw	r24, r22
     948:	20 e0       	ldi	r18, 0x00	; 0
     94a:	30 e0       	ldi	r19, 0x00	; 0
     94c:	48 ec       	ldi	r20, 0xC8	; 200
     94e:	52 e4       	ldi	r21, 0x42	; 66
     950:	bc 01       	movw	r22, r24
     952:	cd 01       	movw	r24, r26
     954:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     958:	dc 01       	movw	r26, r24
     95a:	cb 01       	movw	r24, r22
     95c:	20 e0       	ldi	r18, 0x00	; 0
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	40 e2       	ldi	r20, 0x20	; 32
     962:	51 e4       	ldi	r21, 0x41	; 65
     964:	bc 01       	movw	r22, r24
     966:	cd 01       	movw	r24, r26
     968:	0e 94 af 07 	call	0xf5e	; 0xf5e <__divsf3>
     96c:	dc 01       	movw	r26, r24
     96e:	cb 01       	movw	r24, r22
     970:	bc 01       	movw	r22, r24
     972:	cd 01       	movw	r24, r26
     974:	0e 94 21 08 	call	0x1042	; 0x1042 <__fixsfsi>
     978:	dc 01       	movw	r26, r24
     97a:	cb 01       	movw	r24, r22
     97c:	98 8b       	std	Y+16, r25	; 0x10
     97e:	8f 87       	std	Y+15, r24	; 0x0f
			showNumber(v);
     980:	8f 85       	ldd	r24, Y+15	; 0x0f
     982:	98 89       	ldd	r25, Y+16	; 0x10
     984:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <showNumber>
			ser_writeln("");
     988:	8f e2       	ldi	r24, 0x2F	; 47
     98a:	91 e0       	ldi	r25, 0x01	; 1
     98c:	0e 94 02 03 	call	0x604	; 0x604 <ser_writeln>
			showNumber(ADCvalue * 5.0);
     990:	89 85       	ldd	r24, Y+9	; 0x09
     992:	9a 85       	ldd	r25, Y+10	; 0x0a
     994:	09 2e       	mov	r0, r25
     996:	00 0c       	add	r0, r0
     998:	aa 0b       	sbc	r26, r26
     99a:	bb 0b       	sbc	r27, r27
     99c:	bc 01       	movw	r22, r24
     99e:	cd 01       	movw	r24, r26
     9a0:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__floatsisf>
     9a4:	dc 01       	movw	r26, r24
     9a6:	cb 01       	movw	r24, r22
     9a8:	20 e0       	ldi	r18, 0x00	; 0
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	40 ea       	ldi	r20, 0xA0	; 160
     9ae:	50 e4       	ldi	r21, 0x40	; 64
     9b0:	bc 01       	movw	r22, r24
     9b2:	cd 01       	movw	r24, r26
     9b4:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     9b8:	dc 01       	movw	r26, r24
     9ba:	cb 01       	movw	r24, r22
     9bc:	bc 01       	movw	r22, r24
     9be:	cd 01       	movw	r24, r26
     9c0:	0e 94 21 08 	call	0x1042	; 0x1042 <__fixsfsi>
     9c4:	dc 01       	movw	r26, r24
     9c6:	cb 01       	movw	r24, r22
     9c8:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <showNumber>
		}
		
		if(strcmp(in_buf,"DISTANCE") == 0){
     9cc:	ce 01       	movw	r24, r28
     9ce:	86 5b       	subi	r24, 0xB6	; 182
     9d0:	9f 4f       	sbci	r25, 0xFF	; 255
     9d2:	60 e3       	ldi	r22, 0x30	; 48
     9d4:	71 e0       	ldi	r23, 0x01	; 1
     9d6:	0e 94 a3 09 	call	0x1346	; 0x1346 <strcmp>
     9da:	89 2b       	or	r24, r25
     9dc:	09 f0       	breq	.+2      	; 0x9e0 <__stack+0xe1>
     9de:	e4 c1       	rjmp	.+968    	; 0xda8 <__stack+0x4a9>
			uint8_t temp = PORTB;
     9e0:	85 e2       	ldi	r24, 0x25	; 37
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	fc 01       	movw	r30, r24
     9e6:	80 81       	ld	r24, Z
     9e8:	89 8b       	std	Y+17, r24	; 0x11
			sei();
     9ea:	78 94       	sei
			PORTB |= 0b000000010;
     9ec:	85 e2       	ldi	r24, 0x25	; 37
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	25 e2       	ldi	r18, 0x25	; 37
     9f2:	30 e0       	ldi	r19, 0x00	; 0
     9f4:	f9 01       	movw	r30, r18
     9f6:	20 81       	ld	r18, Z
     9f8:	22 60       	ori	r18, 0x02	; 2
     9fa:	fc 01       	movw	r30, r24
     9fc:	20 83       	st	Z, r18
			_delay_us(echo_pulse_time);
     9fe:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <echo_pulse_time>
     a02:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <echo_pulse_time+0x1>
     a06:	09 2e       	mov	r0, r25
     a08:	00 0c       	add	r0, r0
     a0a:	aa 0b       	sbc	r26, r26
     a0c:	bb 0b       	sbc	r27, r27
     a0e:	bc 01       	movw	r22, r24
     a10:	cd 01       	movw	r24, r26
     a12:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__floatsisf>
     a16:	dc 01       	movw	r26, r24
     a18:	cb 01       	movw	r24, r22
     a1a:	8a 8b       	std	Y+18, r24	; 0x12
     a1c:	9b 8b       	std	Y+19, r25	; 0x13
     a1e:	ac 8b       	std	Y+20, r26	; 0x14
     a20:	bd 8b       	std	Y+21, r27	; 0x15
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     a22:	2b ea       	ldi	r18, 0xAB	; 171
     a24:	3a ea       	ldi	r19, 0xAA	; 170
     a26:	4a ea       	ldi	r20, 0xAA	; 170
     a28:	5e e3       	ldi	r21, 0x3E	; 62
     a2a:	6a 89       	ldd	r22, Y+18	; 0x12
     a2c:	7b 89       	ldd	r23, Y+19	; 0x13
     a2e:	8c 89       	ldd	r24, Y+20	; 0x14
     a30:	9d 89       	ldd	r25, Y+21	; 0x15
     a32:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     a36:	dc 01       	movw	r26, r24
     a38:	cb 01       	movw	r24, r22
     a3a:	8e a7       	std	Y+46, r24	; 0x2e
     a3c:	9f a7       	std	Y+47, r25	; 0x2f
     a3e:	a8 ab       	std	Y+48, r26	; 0x30
     a40:	b9 ab       	std	Y+49, r27	; 0x31
	__tmp2 = ((F_CPU) / 4e6) * __us;
     a42:	20 e0       	ldi	r18, 0x00	; 0
     a44:	30 e0       	ldi	r19, 0x00	; 0
     a46:	40 e8       	ldi	r20, 0x80	; 128
     a48:	5e e3       	ldi	r21, 0x3E	; 62
     a4a:	6a 89       	ldd	r22, Y+18	; 0x12
     a4c:	7b 89       	ldd	r23, Y+19	; 0x13
     a4e:	8c 89       	ldd	r24, Y+20	; 0x14
     a50:	9d 89       	ldd	r25, Y+21	; 0x15
     a52:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     a56:	dc 01       	movw	r26, r24
     a58:	cb 01       	movw	r24, r22
     a5a:	8a ab       	std	Y+50, r24	; 0x32
     a5c:	9b ab       	std	Y+51, r25	; 0x33
     a5e:	ac ab       	std	Y+52, r26	; 0x34
     a60:	bd ab       	std	Y+53, r27	; 0x35
	if (__tmp < 1.0)
     a62:	20 e0       	ldi	r18, 0x00	; 0
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	40 e8       	ldi	r20, 0x80	; 128
     a68:	5f e3       	ldi	r21, 0x3F	; 63
     a6a:	6e a5       	ldd	r22, Y+46	; 0x2e
     a6c:	7f a5       	ldd	r23, Y+47	; 0x2f
     a6e:	88 a9       	ldd	r24, Y+48	; 0x30
     a70:	99 a9       	ldd	r25, Y+49	; 0x31
     a72:	0e 94 aa 07 	call	0xf54	; 0xf54 <__cmpsf2>
     a76:	88 23       	and	r24, r24
     a78:	1c f4       	brge	.+6      	; 0xa80 <__stack+0x181>
		__ticks = 1;
     a7a:	81 e0       	ldi	r24, 0x01	; 1
     a7c:	8e ab       	std	Y+54, r24	; 0x36
     a7e:	f9 c0       	rjmp	.+498    	; 0xc72 <__stack+0x373>
	else if (__tmp2 > 65535)
     a80:	20 e0       	ldi	r18, 0x00	; 0
     a82:	3f ef       	ldi	r19, 0xFF	; 255
     a84:	4f e7       	ldi	r20, 0x7F	; 127
     a86:	57 e4       	ldi	r21, 0x47	; 71
     a88:	6a a9       	ldd	r22, Y+50	; 0x32
     a8a:	7b a9       	ldd	r23, Y+51	; 0x33
     a8c:	8c a9       	ldd	r24, Y+52	; 0x34
     a8e:	9d a9       	ldd	r25, Y+53	; 0x35
     a90:	0e 94 09 09 	call	0x1212	; 0x1212 <__gesf2>
     a94:	18 16       	cp	r1, r24
     a96:	0c f0       	brlt	.+2      	; 0xa9a <__stack+0x19b>
     a98:	ae c0       	rjmp	.+348    	; 0xbf6 <__stack+0x2f7>
	{
		_delay_ms(__us / 1000.0);
     a9a:	20 e0       	ldi	r18, 0x00	; 0
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	4a e7       	ldi	r20, 0x7A	; 122
     aa0:	54 e4       	ldi	r21, 0x44	; 68
     aa2:	6a 89       	ldd	r22, Y+18	; 0x12
     aa4:	7b 89       	ldd	r23, Y+19	; 0x13
     aa6:	8c 89       	ldd	r24, Y+20	; 0x14
     aa8:	9d 89       	ldd	r25, Y+21	; 0x15
     aaa:	0e 94 af 07 	call	0xf5e	; 0xf5e <__divsf3>
     aae:	dc 01       	movw	r26, r24
     ab0:	cb 01       	movw	r24, r22
     ab2:	8f ab       	std	Y+55, r24	; 0x37
     ab4:	98 af       	std	Y+56, r25	; 0x38
     ab6:	a9 af       	std	Y+57, r26	; 0x39
     ab8:	ba af       	std	Y+58, r27	; 0x3a

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     aba:	20 e0       	ldi	r18, 0x00	; 0
     abc:	30 e0       	ldi	r19, 0x00	; 0
     abe:	4a e7       	ldi	r20, 0x7A	; 122
     ac0:	53 e4       	ldi	r21, 0x43	; 67
     ac2:	6f a9       	ldd	r22, Y+55	; 0x37
     ac4:	78 ad       	ldd	r23, Y+56	; 0x38
     ac6:	89 ad       	ldd	r24, Y+57	; 0x39
     ac8:	9a ad       	ldd	r25, Y+58	; 0x3a
     aca:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     ace:	dc 01       	movw	r26, r24
     ad0:	cb 01       	movw	r24, r22
     ad2:	8b af       	std	Y+59, r24	; 0x3b
     ad4:	9c af       	std	Y+60, r25	; 0x3c
     ad6:	ad af       	std	Y+61, r26	; 0x3d
     ad8:	be af       	std	Y+62, r27	; 0x3e
	if (__tmp < 1.0)
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	40 e8       	ldi	r20, 0x80	; 128
     ae0:	5f e3       	ldi	r21, 0x3F	; 63
     ae2:	6b ad       	ldd	r22, Y+59	; 0x3b
     ae4:	7c ad       	ldd	r23, Y+60	; 0x3c
     ae6:	8d ad       	ldd	r24, Y+61	; 0x3d
     ae8:	9e ad       	ldd	r25, Y+62	; 0x3e
     aea:	0e 94 aa 07 	call	0xf54	; 0xf54 <__cmpsf2>
     aee:	88 23       	and	r24, r24
     af0:	44 f4       	brge	.+16     	; 0xb02 <__stack+0x203>
		__ticks = 1;
     af2:	21 e0       	ldi	r18, 0x01	; 1
     af4:	30 e0       	ldi	r19, 0x00	; 0
     af6:	ce 01       	movw	r24, r28
     af8:	cf 96       	adiw	r24, 0x3f	; 63
     afa:	fc 01       	movw	r30, r24
     afc:	31 83       	std	Z+1, r19	; 0x01
     afe:	20 83       	st	Z, r18
     b00:	5f c0       	rjmp	.+190    	; 0xbc0 <__stack+0x2c1>
	else if (__tmp > 65535)
     b02:	20 e0       	ldi	r18, 0x00	; 0
     b04:	3f ef       	ldi	r19, 0xFF	; 255
     b06:	4f e7       	ldi	r20, 0x7F	; 127
     b08:	57 e4       	ldi	r21, 0x47	; 71
     b0a:	6b ad       	ldd	r22, Y+59	; 0x3b
     b0c:	7c ad       	ldd	r23, Y+60	; 0x3c
     b0e:	8d ad       	ldd	r24, Y+61	; 0x3d
     b10:	9e ad       	ldd	r25, Y+62	; 0x3e
     b12:	0e 94 09 09 	call	0x1212	; 0x1212 <__gesf2>
     b16:	18 16       	cp	r1, r24
     b18:	0c f0       	brlt	.+2      	; 0xb1c <__stack+0x21d>
     b1a:	44 c0       	rjmp	.+136    	; 0xba4 <__stack+0x2a5>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b1c:	20 e0       	ldi	r18, 0x00	; 0
     b1e:	30 e0       	ldi	r19, 0x00	; 0
     b20:	40 e2       	ldi	r20, 0x20	; 32
     b22:	51 e4       	ldi	r21, 0x41	; 65
     b24:	6f a9       	ldd	r22, Y+55	; 0x37
     b26:	78 ad       	ldd	r23, Y+56	; 0x38
     b28:	89 ad       	ldd	r24, Y+57	; 0x39
     b2a:	9a ad       	ldd	r25, Y+58	; 0x3a
     b2c:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     b30:	dc 01       	movw	r26, r24
     b32:	cb 01       	movw	r24, r22
     b34:	bc 01       	movw	r22, r24
     b36:	cd 01       	movw	r24, r26
     b38:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     b3c:	dc 01       	movw	r26, r24
     b3e:	cb 01       	movw	r24, r22
     b40:	9e 01       	movw	r18, r28
     b42:	21 5c       	subi	r18, 0xC1	; 193
     b44:	3f 4f       	sbci	r19, 0xFF	; 255
     b46:	f9 01       	movw	r30, r18
     b48:	91 83       	std	Z+1, r25	; 0x01
     b4a:	80 83       	st	Z, r24
     b4c:	23 c0       	rjmp	.+70     	; 0xb94 <__stack+0x295>
     b4e:	ce 01       	movw	r24, r28
     b50:	8f 5b       	subi	r24, 0xBF	; 191
     b52:	9f 4f       	sbci	r25, 0xFF	; 255
     b54:	29 e1       	ldi	r18, 0x19	; 25
     b56:	30 e0       	ldi	r19, 0x00	; 0
     b58:	fc 01       	movw	r30, r24
     b5a:	31 83       	std	Z+1, r19	; 0x01
     b5c:	20 83       	st	Z, r18
     b5e:	ce 01       	movw	r24, r28
     b60:	8f 5b       	subi	r24, 0xBF	; 191
     b62:	9f 4f       	sbci	r25, 0xFF	; 255
     b64:	fc 01       	movw	r30, r24
     b66:	80 81       	ld	r24, Z
     b68:	91 81       	ldd	r25, Z+1	; 0x01
     b6a:	01 97       	sbiw	r24, 0x01	; 1
     b6c:	f1 f7       	brne	.-4      	; 0xb6a <__stack+0x26b>
     b6e:	9e 01       	movw	r18, r28
     b70:	2f 5b       	subi	r18, 0xBF	; 191
     b72:	3f 4f       	sbci	r19, 0xFF	; 255
     b74:	f9 01       	movw	r30, r18
     b76:	91 83       	std	Z+1, r25	; 0x01
     b78:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b7a:	ce 01       	movw	r24, r28
     b7c:	cf 96       	adiw	r24, 0x3f	; 63
     b7e:	fc 01       	movw	r30, r24
     b80:	80 81       	ld	r24, Z
     b82:	91 81       	ldd	r25, Z+1	; 0x01
     b84:	9c 01       	movw	r18, r24
     b86:	21 50       	subi	r18, 0x01	; 1
     b88:	31 09       	sbc	r19, r1
     b8a:	ce 01       	movw	r24, r28
     b8c:	cf 96       	adiw	r24, 0x3f	; 63
     b8e:	fc 01       	movw	r30, r24
     b90:	31 83       	std	Z+1, r19	; 0x01
     b92:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b94:	ce 01       	movw	r24, r28
     b96:	cf 96       	adiw	r24, 0x3f	; 63
     b98:	fc 01       	movw	r30, r24
     b9a:	80 81       	ld	r24, Z
     b9c:	91 81       	ldd	r25, Z+1	; 0x01
     b9e:	89 2b       	or	r24, r25
     ba0:	b1 f6       	brne	.-84     	; 0xb4e <__stack+0x24f>
     ba2:	67 c0       	rjmp	.+206    	; 0xc72 <__stack+0x373>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ba4:	6b ad       	ldd	r22, Y+59	; 0x3b
     ba6:	7c ad       	ldd	r23, Y+60	; 0x3c
     ba8:	8d ad       	ldd	r24, Y+61	; 0x3d
     baa:	9e ad       	ldd	r25, Y+62	; 0x3e
     bac:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     bb0:	dc 01       	movw	r26, r24
     bb2:	cb 01       	movw	r24, r22
     bb4:	9e 01       	movw	r18, r28
     bb6:	21 5c       	subi	r18, 0xC1	; 193
     bb8:	3f 4f       	sbci	r19, 0xFF	; 255
     bba:	f9 01       	movw	r30, r18
     bbc:	91 83       	std	Z+1, r25	; 0x01
     bbe:	80 83       	st	Z, r24
     bc0:	ce 01       	movw	r24, r28
     bc2:	8d 5b       	subi	r24, 0xBD	; 189
     bc4:	9f 4f       	sbci	r25, 0xFF	; 255
     bc6:	9e 01       	movw	r18, r28
     bc8:	21 5c       	subi	r18, 0xC1	; 193
     bca:	3f 4f       	sbci	r19, 0xFF	; 255
     bcc:	f9 01       	movw	r30, r18
     bce:	20 81       	ld	r18, Z
     bd0:	31 81       	ldd	r19, Z+1	; 0x01
     bd2:	fc 01       	movw	r30, r24
     bd4:	31 83       	std	Z+1, r19	; 0x01
     bd6:	20 83       	st	Z, r18
     bd8:	ce 01       	movw	r24, r28
     bda:	8d 5b       	subi	r24, 0xBD	; 189
     bdc:	9f 4f       	sbci	r25, 0xFF	; 255
     bde:	fc 01       	movw	r30, r24
     be0:	80 81       	ld	r24, Z
     be2:	91 81       	ldd	r25, Z+1	; 0x01
     be4:	01 97       	sbiw	r24, 0x01	; 1
     be6:	f1 f7       	brne	.-4      	; 0xbe4 <__stack+0x2e5>
     be8:	9e 01       	movw	r18, r28
     bea:	2d 5b       	subi	r18, 0xBD	; 189
     bec:	3f 4f       	sbci	r19, 0xFF	; 255
     bee:	f9 01       	movw	r30, r18
     bf0:	91 83       	std	Z+1, r25	; 0x01
     bf2:	80 83       	st	Z, r24
     bf4:	3e c0       	rjmp	.+124    	; 0xc72 <__stack+0x373>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     bf6:	20 e0       	ldi	r18, 0x00	; 0
     bf8:	30 e0       	ldi	r19, 0x00	; 0
     bfa:	4f e7       	ldi	r20, 0x7F	; 127
     bfc:	53 e4       	ldi	r21, 0x43	; 67
     bfe:	6e a5       	ldd	r22, Y+46	; 0x2e
     c00:	7f a5       	ldd	r23, Y+47	; 0x2f
     c02:	88 a9       	ldd	r24, Y+48	; 0x30
     c04:	99 a9       	ldd	r25, Y+49	; 0x31
     c06:	0e 94 09 09 	call	0x1212	; 0x1212 <__gesf2>
     c0a:	18 16       	cp	r1, r24
     c0c:	4c f5       	brge	.+82     	; 0xc60 <__stack+0x361>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     c0e:	8e 01       	movw	r16, r28
     c10:	0b 5b       	subi	r16, 0xBB	; 187
     c12:	1f 4f       	sbci	r17, 0xFF	; 255
     c14:	6a a9       	ldd	r22, Y+50	; 0x32
     c16:	7b a9       	ldd	r23, Y+51	; 0x33
     c18:	8c a9       	ldd	r24, Y+52	; 0x34
     c1a:	9d a9       	ldd	r25, Y+53	; 0x35
     c1c:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     c20:	dc 01       	movw	r26, r24
     c22:	cb 01       	movw	r24, r22
     c24:	f8 01       	movw	r30, r16
     c26:	91 83       	std	Z+1, r25	; 0x01
     c28:	80 83       	st	Z, r24
     c2a:	ce 01       	movw	r24, r28
     c2c:	89 5b       	subi	r24, 0xB9	; 185
     c2e:	9f 4f       	sbci	r25, 0xFF	; 255
     c30:	9e 01       	movw	r18, r28
     c32:	2b 5b       	subi	r18, 0xBB	; 187
     c34:	3f 4f       	sbci	r19, 0xFF	; 255
     c36:	f9 01       	movw	r30, r18
     c38:	20 81       	ld	r18, Z
     c3a:	31 81       	ldd	r19, Z+1	; 0x01
     c3c:	fc 01       	movw	r30, r24
     c3e:	31 83       	std	Z+1, r19	; 0x01
     c40:	20 83       	st	Z, r18
     c42:	ce 01       	movw	r24, r28
     c44:	89 5b       	subi	r24, 0xB9	; 185
     c46:	9f 4f       	sbci	r25, 0xFF	; 255
     c48:	fc 01       	movw	r30, r24
     c4a:	80 81       	ld	r24, Z
     c4c:	91 81       	ldd	r25, Z+1	; 0x01
     c4e:	01 97       	sbiw	r24, 0x01	; 1
     c50:	f1 f7       	brne	.-4      	; 0xc4e <__stack+0x34f>
     c52:	9e 01       	movw	r18, r28
     c54:	29 5b       	subi	r18, 0xB9	; 185
     c56:	3f 4f       	sbci	r19, 0xFF	; 255
     c58:	f9 01       	movw	r30, r18
     c5a:	91 83       	std	Z+1, r25	; 0x01
     c5c:	80 83       	st	Z, r24
     c5e:	1c c0       	rjmp	.+56     	; 0xc98 <__stack+0x399>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     c60:	6e a5       	ldd	r22, Y+46	; 0x2e
     c62:	7f a5       	ldd	r23, Y+47	; 0x2f
     c64:	88 a9       	ldd	r24, Y+48	; 0x30
     c66:	99 a9       	ldd	r25, Y+49	; 0x31
     c68:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     c6c:	dc 01       	movw	r26, r24
     c6e:	cb 01       	movw	r24, r22
     c70:	8e ab       	std	Y+54, r24	; 0x36
     c72:	ce 01       	movw	r24, r28
     c74:	87 5b       	subi	r24, 0xB7	; 183
     c76:	9f 4f       	sbci	r25, 0xFF	; 255
     c78:	2e a9       	ldd	r18, Y+54	; 0x36
     c7a:	fc 01       	movw	r30, r24
     c7c:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     c7e:	ce 01       	movw	r24, r28
     c80:	87 5b       	subi	r24, 0xB7	; 183
     c82:	9f 4f       	sbci	r25, 0xFF	; 255
     c84:	fc 01       	movw	r30, r24
     c86:	80 81       	ld	r24, Z
     c88:	28 2f       	mov	r18, r24
     c8a:	2a 95       	dec	r18
     c8c:	f1 f7       	brne	.-4      	; 0xc8a <__stack+0x38b>
     c8e:	ce 01       	movw	r24, r28
     c90:	87 5b       	subi	r24, 0xB7	; 183
     c92:	9f 4f       	sbci	r25, 0xFF	; 255
     c94:	fc 01       	movw	r30, r24
     c96:	20 83       	st	Z, r18
			PORTB = temp;
     c98:	85 e2       	ldi	r24, 0x25	; 37
     c9a:	90 e0       	ldi	r25, 0x00	; 0
     c9c:	29 89       	ldd	r18, Y+17	; 0x11
     c9e:	fc 01       	movw	r30, r24
     ca0:	20 83       	st	Z, r18
     ca2:	80 e0       	ldi	r24, 0x00	; 0
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	a8 ec       	ldi	r26, 0xC8	; 200
     ca8:	b2 e4       	ldi	r27, 0x42	; 66
     caa:	8b 83       	std	Y+3, r24	; 0x03
     cac:	9c 83       	std	Y+4, r25	; 0x04
     cae:	ad 83       	std	Y+5, r26	; 0x05
     cb0:	be 83       	std	Y+6, r27	; 0x06

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     cb2:	20 e0       	ldi	r18, 0x00	; 0
     cb4:	30 e0       	ldi	r19, 0x00	; 0
     cb6:	4a e7       	ldi	r20, 0x7A	; 122
     cb8:	53 e4       	ldi	r21, 0x43	; 67
     cba:	6b 81       	ldd	r22, Y+3	; 0x03
     cbc:	7c 81       	ldd	r23, Y+4	; 0x04
     cbe:	8d 81       	ldd	r24, Y+5	; 0x05
     cc0:	9e 81       	ldd	r25, Y+6	; 0x06
     cc2:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     cc6:	dc 01       	movw	r26, r24
     cc8:	cb 01       	movw	r24, r22
     cca:	8c a3       	std	Y+36, r24	; 0x24
     ccc:	9d a3       	std	Y+37, r25	; 0x25
     cce:	ae a3       	std	Y+38, r26	; 0x26
     cd0:	bf a3       	std	Y+39, r27	; 0x27
	if (__tmp < 1.0)
     cd2:	20 e0       	ldi	r18, 0x00	; 0
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	40 e8       	ldi	r20, 0x80	; 128
     cd8:	5f e3       	ldi	r21, 0x3F	; 63
     cda:	6c a1       	ldd	r22, Y+36	; 0x24
     cdc:	7d a1       	ldd	r23, Y+37	; 0x25
     cde:	8e a1       	ldd	r24, Y+38	; 0x26
     ce0:	9f a1       	ldd	r25, Y+39	; 0x27
     ce2:	0e 94 aa 07 	call	0xf54	; 0xf54 <__cmpsf2>
     ce6:	88 23       	and	r24, r24
     ce8:	2c f4       	brge	.+10     	; 0xcf4 <__stack+0x3f5>
		__ticks = 1;
     cea:	81 e0       	ldi	r24, 0x01	; 1
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	99 a7       	std	Y+41, r25	; 0x29
     cf0:	88 a7       	std	Y+40, r24	; 0x28
     cf2:	3f c0       	rjmp	.+126    	; 0xd72 <__stack+0x473>
	else if (__tmp > 65535)
     cf4:	20 e0       	ldi	r18, 0x00	; 0
     cf6:	3f ef       	ldi	r19, 0xFF	; 255
     cf8:	4f e7       	ldi	r20, 0x7F	; 127
     cfa:	57 e4       	ldi	r21, 0x47	; 71
     cfc:	6c a1       	ldd	r22, Y+36	; 0x24
     cfe:	7d a1       	ldd	r23, Y+37	; 0x25
     d00:	8e a1       	ldd	r24, Y+38	; 0x26
     d02:	9f a1       	ldd	r25, Y+39	; 0x27
     d04:	0e 94 09 09 	call	0x1212	; 0x1212 <__gesf2>
     d08:	18 16       	cp	r1, r24
     d0a:	4c f5       	brge	.+82     	; 0xd5e <__stack+0x45f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d0c:	20 e0       	ldi	r18, 0x00	; 0
     d0e:	30 e0       	ldi	r19, 0x00	; 0
     d10:	40 e2       	ldi	r20, 0x20	; 32
     d12:	51 e4       	ldi	r21, 0x41	; 65
     d14:	6b 81       	ldd	r22, Y+3	; 0x03
     d16:	7c 81       	ldd	r23, Y+4	; 0x04
     d18:	8d 81       	ldd	r24, Y+5	; 0x05
     d1a:	9e 81       	ldd	r25, Y+6	; 0x06
     d1c:	0e 94 0e 09 	call	0x121c	; 0x121c <__mulsf3>
     d20:	dc 01       	movw	r26, r24
     d22:	cb 01       	movw	r24, r22
     d24:	bc 01       	movw	r22, r24
     d26:	cd 01       	movw	r24, r26
     d28:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     d2c:	dc 01       	movw	r26, r24
     d2e:	cb 01       	movw	r24, r22
     d30:	99 a7       	std	Y+41, r25	; 0x29
     d32:	88 a7       	std	Y+40, r24	; 0x28
     d34:	0f c0       	rjmp	.+30     	; 0xd54 <__stack+0x455>
     d36:	89 e1       	ldi	r24, 0x19	; 25
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	9b a7       	std	Y+43, r25	; 0x2b
     d3c:	8a a7       	std	Y+42, r24	; 0x2a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     d3e:	8a a5       	ldd	r24, Y+42	; 0x2a
     d40:	9b a5       	ldd	r25, Y+43	; 0x2b
     d42:	01 97       	sbiw	r24, 0x01	; 1
     d44:	f1 f7       	brne	.-4      	; 0xd42 <__stack+0x443>
     d46:	9b a7       	std	Y+43, r25	; 0x2b
     d48:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d4a:	88 a5       	ldd	r24, Y+40	; 0x28
     d4c:	99 a5       	ldd	r25, Y+41	; 0x29
     d4e:	01 97       	sbiw	r24, 0x01	; 1
     d50:	99 a7       	std	Y+41, r25	; 0x29
     d52:	88 a7       	std	Y+40, r24	; 0x28
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d54:	88 a5       	ldd	r24, Y+40	; 0x28
     d56:	99 a5       	ldd	r25, Y+41	; 0x29
     d58:	89 2b       	or	r24, r25
     d5a:	69 f7       	brne	.-38     	; 0xd36 <__stack+0x437>
     d5c:	14 c0       	rjmp	.+40     	; 0xd86 <__stack+0x487>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d5e:	6c a1       	ldd	r22, Y+36	; 0x24
     d60:	7d a1       	ldd	r23, Y+37	; 0x25
     d62:	8e a1       	ldd	r24, Y+38	; 0x26
     d64:	9f a1       	ldd	r25, Y+39	; 0x27
     d66:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
     d6a:	dc 01       	movw	r26, r24
     d6c:	cb 01       	movw	r24, r22
     d6e:	99 a7       	std	Y+41, r25	; 0x29
     d70:	88 a7       	std	Y+40, r24	; 0x28
     d72:	88 a5       	ldd	r24, Y+40	; 0x28
     d74:	99 a5       	ldd	r25, Y+41	; 0x29
     d76:	9d a7       	std	Y+45, r25	; 0x2d
     d78:	8c a7       	std	Y+44, r24	; 0x2c
     d7a:	8c a5       	ldd	r24, Y+44	; 0x2c
     d7c:	9d a5       	ldd	r25, Y+45	; 0x2d
     d7e:	01 97       	sbiw	r24, 0x01	; 1
     d80:	f1 f7       	brne	.-4      	; 0xd7e <__stack+0x47f>
     d82:	9d a7       	std	Y+45, r25	; 0x2d
     d84:	8c a7       	std	Y+44, r24	; 0x2c
			_delay_ms(100);
			cli();
     d86:	f8 94       	cli
			count = pulse/1000;
     d88:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <pulse>
     d8c:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <pulse+0x1>
     d90:	28 ee       	ldi	r18, 0xE8	; 232
     d92:	33 e0       	ldi	r19, 0x03	; 3
     d94:	b9 01       	movw	r22, r18
     d96:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <__divmodhi4>
     d9a:	cb 01       	movw	r24, r22
     d9c:	9a 83       	std	Y+2, r25	; 0x02
     d9e:	89 83       	std	Y+1, r24	; 0x01
			showNumber(count);
     da0:	89 81       	ldd	r24, Y+1	; 0x01
     da2:	9a 81       	ldd	r25, Y+2	; 0x02
     da4:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <showNumber>
		}
		
		if(strcmp(in_buf,"DOWN") == 0){
     da8:	ce 01       	movw	r24, r28
     daa:	86 5b       	subi	r24, 0xB6	; 182
     dac:	9f 4f       	sbci	r25, 0xFF	; 255
     dae:	69 e3       	ldi	r22, 0x39	; 57
     db0:	71 e0       	ldi	r23, 0x01	; 1
     db2:	0e 94 a3 09 	call	0x1346	; 0x1346 <strcmp>
     db6:	89 2b       	or	r24, r25
     db8:	11 f4       	brne	.+4      	; 0xdbe <__stack+0x4bf>
			down();
     dba:	0e 94 02 02 	call	0x404	; 0x404 <down>
		}
		if(strcmp(in_buf,"UP") == 0){
     dbe:	ce 01       	movw	r24, r28
     dc0:	86 5b       	subi	r24, 0xB6	; 182
     dc2:	9f 4f       	sbci	r25, 0xFF	; 255
     dc4:	6e e3       	ldi	r22, 0x3E	; 62
     dc6:	71 e0       	ldi	r23, 0x01	; 1
     dc8:	0e 94 a3 09 	call	0x1346	; 0x1346 <strcmp>
     dcc:	89 2b       	or	r24, r25
     dce:	11 f4       	brne	.+4      	; 0xdd4 <__stack+0x4d5>
			up();
     dd0:	0e 94 31 01 	call	0x262	; 0x262 <up>
		}
		
		ser_writeln("");
     dd4:	8f e2       	ldi	r24, 0x2F	; 47
     dd6:	91 e0       	ldi	r25, 0x01	; 1
     dd8:	0e 94 02 03 	call	0x604	; 0x604 <ser_writeln>
		ser_writeln("OK");
     ddc:	81 e4       	ldi	r24, 0x41	; 65
     dde:	91 e0       	ldi	r25, 0x01	; 1
     de0:	0e 94 02 03 	call	0x604	; 0x604 <ser_writeln>
	}
     de4:	e0 cc       	rjmp	.-1600   	; 0x7a6 <main+0x4e>

00000de6 <__vector_1>:
}

ISR(INT0_vect){
     de6:	1f 92       	push	r1
     de8:	0f 92       	push	r0
     dea:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     dee:	0f 92       	push	r0
     df0:	11 24       	eor	r1, r1
     df2:	2f 93       	push	r18
     df4:	8f 93       	push	r24
     df6:	9f 93       	push	r25
     df8:	ef 93       	push	r30
     dfa:	ff 93       	push	r31
     dfc:	cf 93       	push	r28
     dfe:	df 93       	push	r29
     e00:	cd b7       	in	r28, 0x3d	; 61
     e02:	de b7       	in	r29, 0x3e	; 62
	if(integer==1){
     e04:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <integer>
     e08:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <integer+0x1>
     e0c:	01 97       	sbiw	r24, 0x01	; 1
     e0e:	b1 f4       	brne	.+44     	; 0xe3c <__vector_1+0x56>
		TCCR1B=0;
     e10:	81 e8       	ldi	r24, 0x81	; 129
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	fc 01       	movw	r30, r24
     e16:	10 82       	st	Z, r1
		pulse=TCNT1;
     e18:	84 e8       	ldi	r24, 0x84	; 132
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	fc 01       	movw	r30, r24
     e1e:	80 81       	ld	r24, Z
     e20:	91 81       	ldd	r25, Z+1	; 0x01
     e22:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <pulse+0x1>
     e26:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <pulse>
		TCNT1=0;
     e2a:	84 e8       	ldi	r24, 0x84	; 132
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	fc 01       	movw	r30, r24
     e30:	11 82       	std	Z+1, r1	; 0x01
     e32:	10 82       	st	Z, r1
		integer=0;
     e34:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <integer+0x1>
     e38:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <integer>
	}
	if(integer==0){
     e3c:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <integer>
     e40:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <integer+0x1>
     e44:	89 2b       	or	r24, r25
     e46:	59 f4       	brne	.+22     	; 0xe5e <__vector_1+0x78>
		TCCR1B = 0x01;
     e48:	81 e8       	ldi	r24, 0x81	; 129
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	21 e0       	ldi	r18, 0x01	; 1
     e4e:	fc 01       	movw	r30, r24
     e50:	20 83       	st	Z, r18
		integer=1;
     e52:	81 e0       	ldi	r24, 0x01	; 1
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	90 93 49 01 	sts	0x0149, r25	; 0x800149 <integer+0x1>
     e5a:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <integer>
	}
}
     e5e:	00 00       	nop
     e60:	df 91       	pop	r29
     e62:	cf 91       	pop	r28
     e64:	ff 91       	pop	r31
     e66:	ef 91       	pop	r30
     e68:	9f 91       	pop	r25
     e6a:	8f 91       	pop	r24
     e6c:	2f 91       	pop	r18
     e6e:	0f 90       	pop	r0
     e70:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     e74:	0f 90       	pop	r0
     e76:	1f 90       	pop	r1
     e78:	18 95       	reti

00000e7a <__subsf3>:
     e7a:	50 58       	subi	r21, 0x80	; 128

00000e7c <__addsf3>:
     e7c:	bb 27       	eor	r27, r27
     e7e:	aa 27       	eor	r26, r26
     e80:	0e 94 55 07 	call	0xeaa	; 0xeaa <__addsf3x>
     e84:	0c 94 cf 08 	jmp	0x119e	; 0x119e <__fp_round>
     e88:	0e 94 c1 08 	call	0x1182	; 0x1182 <__fp_pscA>
     e8c:	38 f0       	brcs	.+14     	; 0xe9c <__addsf3+0x20>
     e8e:	0e 94 c8 08 	call	0x1190	; 0x1190 <__fp_pscB>
     e92:	20 f0       	brcs	.+8      	; 0xe9c <__addsf3+0x20>
     e94:	39 f4       	brne	.+14     	; 0xea4 <__addsf3+0x28>
     e96:	9f 3f       	cpi	r25, 0xFF	; 255
     e98:	19 f4       	brne	.+6      	; 0xea0 <__addsf3+0x24>
     e9a:	26 f4       	brtc	.+8      	; 0xea4 <__addsf3+0x28>
     e9c:	0c 94 be 08 	jmp	0x117c	; 0x117c <__fp_nan>
     ea0:	0e f4       	brtc	.+2      	; 0xea4 <__addsf3+0x28>
     ea2:	e0 95       	com	r30
     ea4:	e7 fb       	bst	r30, 7
     ea6:	0c 94 b8 08 	jmp	0x1170	; 0x1170 <__fp_inf>

00000eaa <__addsf3x>:
     eaa:	e9 2f       	mov	r30, r25
     eac:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__fp_split3>
     eb0:	58 f3       	brcs	.-42     	; 0xe88 <__addsf3+0xc>
     eb2:	ba 17       	cp	r27, r26
     eb4:	62 07       	cpc	r22, r18
     eb6:	73 07       	cpc	r23, r19
     eb8:	84 07       	cpc	r24, r20
     eba:	95 07       	cpc	r25, r21
     ebc:	20 f0       	brcs	.+8      	; 0xec6 <__addsf3x+0x1c>
     ebe:	79 f4       	brne	.+30     	; 0xede <__addsf3x+0x34>
     ec0:	a6 f5       	brtc	.+104    	; 0xf2a <__addsf3x+0x80>
     ec2:	0c 94 02 09 	jmp	0x1204	; 0x1204 <__fp_zero>
     ec6:	0e f4       	brtc	.+2      	; 0xeca <__addsf3x+0x20>
     ec8:	e0 95       	com	r30
     eca:	0b 2e       	mov	r0, r27
     ecc:	ba 2f       	mov	r27, r26
     ece:	a0 2d       	mov	r26, r0
     ed0:	0b 01       	movw	r0, r22
     ed2:	b9 01       	movw	r22, r18
     ed4:	90 01       	movw	r18, r0
     ed6:	0c 01       	movw	r0, r24
     ed8:	ca 01       	movw	r24, r20
     eda:	a0 01       	movw	r20, r0
     edc:	11 24       	eor	r1, r1
     ede:	ff 27       	eor	r31, r31
     ee0:	59 1b       	sub	r21, r25
     ee2:	99 f0       	breq	.+38     	; 0xf0a <__addsf3x+0x60>
     ee4:	59 3f       	cpi	r21, 0xF9	; 249
     ee6:	50 f4       	brcc	.+20     	; 0xefc <__addsf3x+0x52>
     ee8:	50 3e       	cpi	r21, 0xE0	; 224
     eea:	68 f1       	brcs	.+90     	; 0xf46 <__addsf3x+0x9c>
     eec:	1a 16       	cp	r1, r26
     eee:	f0 40       	sbci	r31, 0x00	; 0
     ef0:	a2 2f       	mov	r26, r18
     ef2:	23 2f       	mov	r18, r19
     ef4:	34 2f       	mov	r19, r20
     ef6:	44 27       	eor	r20, r20
     ef8:	58 5f       	subi	r21, 0xF8	; 248
     efa:	f3 cf       	rjmp	.-26     	; 0xee2 <__addsf3x+0x38>
     efc:	46 95       	lsr	r20
     efe:	37 95       	ror	r19
     f00:	27 95       	ror	r18
     f02:	a7 95       	ror	r26
     f04:	f0 40       	sbci	r31, 0x00	; 0
     f06:	53 95       	inc	r21
     f08:	c9 f7       	brne	.-14     	; 0xefc <__addsf3x+0x52>
     f0a:	7e f4       	brtc	.+30     	; 0xf2a <__addsf3x+0x80>
     f0c:	1f 16       	cp	r1, r31
     f0e:	ba 0b       	sbc	r27, r26
     f10:	62 0b       	sbc	r22, r18
     f12:	73 0b       	sbc	r23, r19
     f14:	84 0b       	sbc	r24, r20
     f16:	ba f0       	brmi	.+46     	; 0xf46 <__addsf3x+0x9c>
     f18:	91 50       	subi	r25, 0x01	; 1
     f1a:	a1 f0       	breq	.+40     	; 0xf44 <__addsf3x+0x9a>
     f1c:	ff 0f       	add	r31, r31
     f1e:	bb 1f       	adc	r27, r27
     f20:	66 1f       	adc	r22, r22
     f22:	77 1f       	adc	r23, r23
     f24:	88 1f       	adc	r24, r24
     f26:	c2 f7       	brpl	.-16     	; 0xf18 <__addsf3x+0x6e>
     f28:	0e c0       	rjmp	.+28     	; 0xf46 <__addsf3x+0x9c>
     f2a:	ba 0f       	add	r27, r26
     f2c:	62 1f       	adc	r22, r18
     f2e:	73 1f       	adc	r23, r19
     f30:	84 1f       	adc	r24, r20
     f32:	48 f4       	brcc	.+18     	; 0xf46 <__addsf3x+0x9c>
     f34:	87 95       	ror	r24
     f36:	77 95       	ror	r23
     f38:	67 95       	ror	r22
     f3a:	b7 95       	ror	r27
     f3c:	f7 95       	ror	r31
     f3e:	9e 3f       	cpi	r25, 0xFE	; 254
     f40:	08 f0       	brcs	.+2      	; 0xf44 <__addsf3x+0x9a>
     f42:	b0 cf       	rjmp	.-160    	; 0xea4 <__addsf3+0x28>
     f44:	93 95       	inc	r25
     f46:	88 0f       	add	r24, r24
     f48:	08 f0       	brcs	.+2      	; 0xf4c <__addsf3x+0xa2>
     f4a:	99 27       	eor	r25, r25
     f4c:	ee 0f       	add	r30, r30
     f4e:	97 95       	ror	r25
     f50:	87 95       	ror	r24
     f52:	08 95       	ret

00000f54 <__cmpsf2>:
     f54:	0e 94 94 08 	call	0x1128	; 0x1128 <__fp_cmp>
     f58:	08 f4       	brcc	.+2      	; 0xf5c <__cmpsf2+0x8>
     f5a:	81 e0       	ldi	r24, 0x01	; 1
     f5c:	08 95       	ret

00000f5e <__divsf3>:
     f5e:	0e 94 c3 07 	call	0xf86	; 0xf86 <__divsf3x>
     f62:	0c 94 cf 08 	jmp	0x119e	; 0x119e <__fp_round>
     f66:	0e 94 c8 08 	call	0x1190	; 0x1190 <__fp_pscB>
     f6a:	58 f0       	brcs	.+22     	; 0xf82 <__divsf3+0x24>
     f6c:	0e 94 c1 08 	call	0x1182	; 0x1182 <__fp_pscA>
     f70:	40 f0       	brcs	.+16     	; 0xf82 <__divsf3+0x24>
     f72:	29 f4       	brne	.+10     	; 0xf7e <__divsf3+0x20>
     f74:	5f 3f       	cpi	r21, 0xFF	; 255
     f76:	29 f0       	breq	.+10     	; 0xf82 <__divsf3+0x24>
     f78:	0c 94 b8 08 	jmp	0x1170	; 0x1170 <__fp_inf>
     f7c:	51 11       	cpse	r21, r1
     f7e:	0c 94 03 09 	jmp	0x1206	; 0x1206 <__fp_szero>
     f82:	0c 94 be 08 	jmp	0x117c	; 0x117c <__fp_nan>

00000f86 <__divsf3x>:
     f86:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__fp_split3>
     f8a:	68 f3       	brcs	.-38     	; 0xf66 <__divsf3+0x8>

00000f8c <__divsf3_pse>:
     f8c:	99 23       	and	r25, r25
     f8e:	b1 f3       	breq	.-20     	; 0xf7c <__divsf3+0x1e>
     f90:	55 23       	and	r21, r21
     f92:	91 f3       	breq	.-28     	; 0xf78 <__divsf3+0x1a>
     f94:	95 1b       	sub	r25, r21
     f96:	55 0b       	sbc	r21, r21
     f98:	bb 27       	eor	r27, r27
     f9a:	aa 27       	eor	r26, r26
     f9c:	62 17       	cp	r22, r18
     f9e:	73 07       	cpc	r23, r19
     fa0:	84 07       	cpc	r24, r20
     fa2:	38 f0       	brcs	.+14     	; 0xfb2 <__divsf3_pse+0x26>
     fa4:	9f 5f       	subi	r25, 0xFF	; 255
     fa6:	5f 4f       	sbci	r21, 0xFF	; 255
     fa8:	22 0f       	add	r18, r18
     faa:	33 1f       	adc	r19, r19
     fac:	44 1f       	adc	r20, r20
     fae:	aa 1f       	adc	r26, r26
     fb0:	a9 f3       	breq	.-22     	; 0xf9c <__divsf3_pse+0x10>
     fb2:	35 d0       	rcall	.+106    	; 0x101e <__divsf3_pse+0x92>
     fb4:	0e 2e       	mov	r0, r30
     fb6:	3a f0       	brmi	.+14     	; 0xfc6 <__divsf3_pse+0x3a>
     fb8:	e0 e8       	ldi	r30, 0x80	; 128
     fba:	32 d0       	rcall	.+100    	; 0x1020 <__divsf3_pse+0x94>
     fbc:	91 50       	subi	r25, 0x01	; 1
     fbe:	50 40       	sbci	r21, 0x00	; 0
     fc0:	e6 95       	lsr	r30
     fc2:	00 1c       	adc	r0, r0
     fc4:	ca f7       	brpl	.-14     	; 0xfb8 <__divsf3_pse+0x2c>
     fc6:	2b d0       	rcall	.+86     	; 0x101e <__divsf3_pse+0x92>
     fc8:	fe 2f       	mov	r31, r30
     fca:	29 d0       	rcall	.+82     	; 0x101e <__divsf3_pse+0x92>
     fcc:	66 0f       	add	r22, r22
     fce:	77 1f       	adc	r23, r23
     fd0:	88 1f       	adc	r24, r24
     fd2:	bb 1f       	adc	r27, r27
     fd4:	26 17       	cp	r18, r22
     fd6:	37 07       	cpc	r19, r23
     fd8:	48 07       	cpc	r20, r24
     fda:	ab 07       	cpc	r26, r27
     fdc:	b0 e8       	ldi	r27, 0x80	; 128
     fde:	09 f0       	breq	.+2      	; 0xfe2 <__divsf3_pse+0x56>
     fe0:	bb 0b       	sbc	r27, r27
     fe2:	80 2d       	mov	r24, r0
     fe4:	bf 01       	movw	r22, r30
     fe6:	ff 27       	eor	r31, r31
     fe8:	93 58       	subi	r25, 0x83	; 131
     fea:	5f 4f       	sbci	r21, 0xFF	; 255
     fec:	3a f0       	brmi	.+14     	; 0xffc <__divsf3_pse+0x70>
     fee:	9e 3f       	cpi	r25, 0xFE	; 254
     ff0:	51 05       	cpc	r21, r1
     ff2:	78 f0       	brcs	.+30     	; 0x1012 <__divsf3_pse+0x86>
     ff4:	0c 94 b8 08 	jmp	0x1170	; 0x1170 <__fp_inf>
     ff8:	0c 94 03 09 	jmp	0x1206	; 0x1206 <__fp_szero>
     ffc:	5f 3f       	cpi	r21, 0xFF	; 255
     ffe:	e4 f3       	brlt	.-8      	; 0xff8 <__divsf3_pse+0x6c>
    1000:	98 3e       	cpi	r25, 0xE8	; 232
    1002:	d4 f3       	brlt	.-12     	; 0xff8 <__divsf3_pse+0x6c>
    1004:	86 95       	lsr	r24
    1006:	77 95       	ror	r23
    1008:	67 95       	ror	r22
    100a:	b7 95       	ror	r27
    100c:	f7 95       	ror	r31
    100e:	9f 5f       	subi	r25, 0xFF	; 255
    1010:	c9 f7       	brne	.-14     	; 0x1004 <__divsf3_pse+0x78>
    1012:	88 0f       	add	r24, r24
    1014:	91 1d       	adc	r25, r1
    1016:	96 95       	lsr	r25
    1018:	87 95       	ror	r24
    101a:	97 f9       	bld	r25, 7
    101c:	08 95       	ret
    101e:	e1 e0       	ldi	r30, 0x01	; 1
    1020:	66 0f       	add	r22, r22
    1022:	77 1f       	adc	r23, r23
    1024:	88 1f       	adc	r24, r24
    1026:	bb 1f       	adc	r27, r27
    1028:	62 17       	cp	r22, r18
    102a:	73 07       	cpc	r23, r19
    102c:	84 07       	cpc	r24, r20
    102e:	ba 07       	cpc	r27, r26
    1030:	20 f0       	brcs	.+8      	; 0x103a <__divsf3_pse+0xae>
    1032:	62 1b       	sub	r22, r18
    1034:	73 0b       	sbc	r23, r19
    1036:	84 0b       	sbc	r24, r20
    1038:	ba 0b       	sbc	r27, r26
    103a:	ee 1f       	adc	r30, r30
    103c:	88 f7       	brcc	.-30     	; 0x1020 <__divsf3_pse+0x94>
    103e:	e0 95       	com	r30
    1040:	08 95       	ret

00001042 <__fixsfsi>:
    1042:	0e 94 28 08 	call	0x1050	; 0x1050 <__fixunssfsi>
    1046:	68 94       	set
    1048:	b1 11       	cpse	r27, r1
    104a:	0c 94 03 09 	jmp	0x1206	; 0x1206 <__fp_szero>
    104e:	08 95       	ret

00001050 <__fixunssfsi>:
    1050:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__fp_splitA>
    1054:	88 f0       	brcs	.+34     	; 0x1078 <__fixunssfsi+0x28>
    1056:	9f 57       	subi	r25, 0x7F	; 127
    1058:	98 f0       	brcs	.+38     	; 0x1080 <__fixunssfsi+0x30>
    105a:	b9 2f       	mov	r27, r25
    105c:	99 27       	eor	r25, r25
    105e:	b7 51       	subi	r27, 0x17	; 23
    1060:	b0 f0       	brcs	.+44     	; 0x108e <__fixunssfsi+0x3e>
    1062:	e1 f0       	breq	.+56     	; 0x109c <__fixunssfsi+0x4c>
    1064:	66 0f       	add	r22, r22
    1066:	77 1f       	adc	r23, r23
    1068:	88 1f       	adc	r24, r24
    106a:	99 1f       	adc	r25, r25
    106c:	1a f0       	brmi	.+6      	; 0x1074 <__fixunssfsi+0x24>
    106e:	ba 95       	dec	r27
    1070:	c9 f7       	brne	.-14     	; 0x1064 <__fixunssfsi+0x14>
    1072:	14 c0       	rjmp	.+40     	; 0x109c <__fixunssfsi+0x4c>
    1074:	b1 30       	cpi	r27, 0x01	; 1
    1076:	91 f0       	breq	.+36     	; 0x109c <__fixunssfsi+0x4c>
    1078:	0e 94 02 09 	call	0x1204	; 0x1204 <__fp_zero>
    107c:	b1 e0       	ldi	r27, 0x01	; 1
    107e:	08 95       	ret
    1080:	0c 94 02 09 	jmp	0x1204	; 0x1204 <__fp_zero>
    1084:	67 2f       	mov	r22, r23
    1086:	78 2f       	mov	r23, r24
    1088:	88 27       	eor	r24, r24
    108a:	b8 5f       	subi	r27, 0xF8	; 248
    108c:	39 f0       	breq	.+14     	; 0x109c <__fixunssfsi+0x4c>
    108e:	b9 3f       	cpi	r27, 0xF9	; 249
    1090:	cc f3       	brlt	.-14     	; 0x1084 <__fixunssfsi+0x34>
    1092:	86 95       	lsr	r24
    1094:	77 95       	ror	r23
    1096:	67 95       	ror	r22
    1098:	b3 95       	inc	r27
    109a:	d9 f7       	brne	.-10     	; 0x1092 <__fixunssfsi+0x42>
    109c:	3e f4       	brtc	.+14     	; 0x10ac <__fixunssfsi+0x5c>
    109e:	90 95       	com	r25
    10a0:	80 95       	com	r24
    10a2:	70 95       	com	r23
    10a4:	61 95       	neg	r22
    10a6:	7f 4f       	sbci	r23, 0xFF	; 255
    10a8:	8f 4f       	sbci	r24, 0xFF	; 255
    10aa:	9f 4f       	sbci	r25, 0xFF	; 255
    10ac:	08 95       	ret

000010ae <__floatunsisf>:
    10ae:	e8 94       	clt
    10b0:	09 c0       	rjmp	.+18     	; 0x10c4 <__floatsisf+0x12>

000010b2 <__floatsisf>:
    10b2:	97 fb       	bst	r25, 7
    10b4:	3e f4       	brtc	.+14     	; 0x10c4 <__floatsisf+0x12>
    10b6:	90 95       	com	r25
    10b8:	80 95       	com	r24
    10ba:	70 95       	com	r23
    10bc:	61 95       	neg	r22
    10be:	7f 4f       	sbci	r23, 0xFF	; 255
    10c0:	8f 4f       	sbci	r24, 0xFF	; 255
    10c2:	9f 4f       	sbci	r25, 0xFF	; 255
    10c4:	99 23       	and	r25, r25
    10c6:	a9 f0       	breq	.+42     	; 0x10f2 <__floatsisf+0x40>
    10c8:	f9 2f       	mov	r31, r25
    10ca:	96 e9       	ldi	r25, 0x96	; 150
    10cc:	bb 27       	eor	r27, r27
    10ce:	93 95       	inc	r25
    10d0:	f6 95       	lsr	r31
    10d2:	87 95       	ror	r24
    10d4:	77 95       	ror	r23
    10d6:	67 95       	ror	r22
    10d8:	b7 95       	ror	r27
    10da:	f1 11       	cpse	r31, r1
    10dc:	f8 cf       	rjmp	.-16     	; 0x10ce <__floatsisf+0x1c>
    10de:	fa f4       	brpl	.+62     	; 0x111e <__floatsisf+0x6c>
    10e0:	bb 0f       	add	r27, r27
    10e2:	11 f4       	brne	.+4      	; 0x10e8 <__floatsisf+0x36>
    10e4:	60 ff       	sbrs	r22, 0
    10e6:	1b c0       	rjmp	.+54     	; 0x111e <__floatsisf+0x6c>
    10e8:	6f 5f       	subi	r22, 0xFF	; 255
    10ea:	7f 4f       	sbci	r23, 0xFF	; 255
    10ec:	8f 4f       	sbci	r24, 0xFF	; 255
    10ee:	9f 4f       	sbci	r25, 0xFF	; 255
    10f0:	16 c0       	rjmp	.+44     	; 0x111e <__floatsisf+0x6c>
    10f2:	88 23       	and	r24, r24
    10f4:	11 f0       	breq	.+4      	; 0x10fa <__floatsisf+0x48>
    10f6:	96 e9       	ldi	r25, 0x96	; 150
    10f8:	11 c0       	rjmp	.+34     	; 0x111c <__floatsisf+0x6a>
    10fa:	77 23       	and	r23, r23
    10fc:	21 f0       	breq	.+8      	; 0x1106 <__floatsisf+0x54>
    10fe:	9e e8       	ldi	r25, 0x8E	; 142
    1100:	87 2f       	mov	r24, r23
    1102:	76 2f       	mov	r23, r22
    1104:	05 c0       	rjmp	.+10     	; 0x1110 <__floatsisf+0x5e>
    1106:	66 23       	and	r22, r22
    1108:	71 f0       	breq	.+28     	; 0x1126 <__floatsisf+0x74>
    110a:	96 e8       	ldi	r25, 0x86	; 134
    110c:	86 2f       	mov	r24, r22
    110e:	70 e0       	ldi	r23, 0x00	; 0
    1110:	60 e0       	ldi	r22, 0x00	; 0
    1112:	2a f0       	brmi	.+10     	; 0x111e <__floatsisf+0x6c>
    1114:	9a 95       	dec	r25
    1116:	66 0f       	add	r22, r22
    1118:	77 1f       	adc	r23, r23
    111a:	88 1f       	adc	r24, r24
    111c:	da f7       	brpl	.-10     	; 0x1114 <__floatsisf+0x62>
    111e:	88 0f       	add	r24, r24
    1120:	96 95       	lsr	r25
    1122:	87 95       	ror	r24
    1124:	97 f9       	bld	r25, 7
    1126:	08 95       	ret

00001128 <__fp_cmp>:
    1128:	99 0f       	add	r25, r25
    112a:	00 08       	sbc	r0, r0
    112c:	55 0f       	add	r21, r21
    112e:	aa 0b       	sbc	r26, r26
    1130:	e0 e8       	ldi	r30, 0x80	; 128
    1132:	fe ef       	ldi	r31, 0xFE	; 254
    1134:	16 16       	cp	r1, r22
    1136:	17 06       	cpc	r1, r23
    1138:	e8 07       	cpc	r30, r24
    113a:	f9 07       	cpc	r31, r25
    113c:	c0 f0       	brcs	.+48     	; 0x116e <__fp_cmp+0x46>
    113e:	12 16       	cp	r1, r18
    1140:	13 06       	cpc	r1, r19
    1142:	e4 07       	cpc	r30, r20
    1144:	f5 07       	cpc	r31, r21
    1146:	98 f0       	brcs	.+38     	; 0x116e <__fp_cmp+0x46>
    1148:	62 1b       	sub	r22, r18
    114a:	73 0b       	sbc	r23, r19
    114c:	84 0b       	sbc	r24, r20
    114e:	95 0b       	sbc	r25, r21
    1150:	39 f4       	brne	.+14     	; 0x1160 <__fp_cmp+0x38>
    1152:	0a 26       	eor	r0, r26
    1154:	61 f0       	breq	.+24     	; 0x116e <__fp_cmp+0x46>
    1156:	23 2b       	or	r18, r19
    1158:	24 2b       	or	r18, r20
    115a:	25 2b       	or	r18, r21
    115c:	21 f4       	brne	.+8      	; 0x1166 <__fp_cmp+0x3e>
    115e:	08 95       	ret
    1160:	0a 26       	eor	r0, r26
    1162:	09 f4       	brne	.+2      	; 0x1166 <__fp_cmp+0x3e>
    1164:	a1 40       	sbci	r26, 0x01	; 1
    1166:	a6 95       	lsr	r26
    1168:	8f ef       	ldi	r24, 0xFF	; 255
    116a:	81 1d       	adc	r24, r1
    116c:	81 1d       	adc	r24, r1
    116e:	08 95       	ret

00001170 <__fp_inf>:
    1170:	97 f9       	bld	r25, 7
    1172:	9f 67       	ori	r25, 0x7F	; 127
    1174:	80 e8       	ldi	r24, 0x80	; 128
    1176:	70 e0       	ldi	r23, 0x00	; 0
    1178:	60 e0       	ldi	r22, 0x00	; 0
    117a:	08 95       	ret

0000117c <__fp_nan>:
    117c:	9f ef       	ldi	r25, 0xFF	; 255
    117e:	80 ec       	ldi	r24, 0xC0	; 192
    1180:	08 95       	ret

00001182 <__fp_pscA>:
    1182:	00 24       	eor	r0, r0
    1184:	0a 94       	dec	r0
    1186:	16 16       	cp	r1, r22
    1188:	17 06       	cpc	r1, r23
    118a:	18 06       	cpc	r1, r24
    118c:	09 06       	cpc	r0, r25
    118e:	08 95       	ret

00001190 <__fp_pscB>:
    1190:	00 24       	eor	r0, r0
    1192:	0a 94       	dec	r0
    1194:	12 16       	cp	r1, r18
    1196:	13 06       	cpc	r1, r19
    1198:	14 06       	cpc	r1, r20
    119a:	05 06       	cpc	r0, r21
    119c:	08 95       	ret

0000119e <__fp_round>:
    119e:	09 2e       	mov	r0, r25
    11a0:	03 94       	inc	r0
    11a2:	00 0c       	add	r0, r0
    11a4:	11 f4       	brne	.+4      	; 0x11aa <__fp_round+0xc>
    11a6:	88 23       	and	r24, r24
    11a8:	52 f0       	brmi	.+20     	; 0x11be <__fp_round+0x20>
    11aa:	bb 0f       	add	r27, r27
    11ac:	40 f4       	brcc	.+16     	; 0x11be <__fp_round+0x20>
    11ae:	bf 2b       	or	r27, r31
    11b0:	11 f4       	brne	.+4      	; 0x11b6 <__fp_round+0x18>
    11b2:	60 ff       	sbrs	r22, 0
    11b4:	04 c0       	rjmp	.+8      	; 0x11be <__fp_round+0x20>
    11b6:	6f 5f       	subi	r22, 0xFF	; 255
    11b8:	7f 4f       	sbci	r23, 0xFF	; 255
    11ba:	8f 4f       	sbci	r24, 0xFF	; 255
    11bc:	9f 4f       	sbci	r25, 0xFF	; 255
    11be:	08 95       	ret

000011c0 <__fp_split3>:
    11c0:	57 fd       	sbrc	r21, 7
    11c2:	90 58       	subi	r25, 0x80	; 128
    11c4:	44 0f       	add	r20, r20
    11c6:	55 1f       	adc	r21, r21
    11c8:	59 f0       	breq	.+22     	; 0x11e0 <__fp_splitA+0x10>
    11ca:	5f 3f       	cpi	r21, 0xFF	; 255
    11cc:	71 f0       	breq	.+28     	; 0x11ea <__fp_splitA+0x1a>
    11ce:	47 95       	ror	r20

000011d0 <__fp_splitA>:
    11d0:	88 0f       	add	r24, r24
    11d2:	97 fb       	bst	r25, 7
    11d4:	99 1f       	adc	r25, r25
    11d6:	61 f0       	breq	.+24     	; 0x11f0 <__fp_splitA+0x20>
    11d8:	9f 3f       	cpi	r25, 0xFF	; 255
    11da:	79 f0       	breq	.+30     	; 0x11fa <__fp_splitA+0x2a>
    11dc:	87 95       	ror	r24
    11de:	08 95       	ret
    11e0:	12 16       	cp	r1, r18
    11e2:	13 06       	cpc	r1, r19
    11e4:	14 06       	cpc	r1, r20
    11e6:	55 1f       	adc	r21, r21
    11e8:	f2 cf       	rjmp	.-28     	; 0x11ce <__fp_split3+0xe>
    11ea:	46 95       	lsr	r20
    11ec:	f1 df       	rcall	.-30     	; 0x11d0 <__fp_splitA>
    11ee:	08 c0       	rjmp	.+16     	; 0x1200 <__fp_splitA+0x30>
    11f0:	16 16       	cp	r1, r22
    11f2:	17 06       	cpc	r1, r23
    11f4:	18 06       	cpc	r1, r24
    11f6:	99 1f       	adc	r25, r25
    11f8:	f1 cf       	rjmp	.-30     	; 0x11dc <__fp_splitA+0xc>
    11fa:	86 95       	lsr	r24
    11fc:	71 05       	cpc	r23, r1
    11fe:	61 05       	cpc	r22, r1
    1200:	08 94       	sec
    1202:	08 95       	ret

00001204 <__fp_zero>:
    1204:	e8 94       	clt

00001206 <__fp_szero>:
    1206:	bb 27       	eor	r27, r27
    1208:	66 27       	eor	r22, r22
    120a:	77 27       	eor	r23, r23
    120c:	cb 01       	movw	r24, r22
    120e:	97 f9       	bld	r25, 7
    1210:	08 95       	ret

00001212 <__gesf2>:
    1212:	0e 94 94 08 	call	0x1128	; 0x1128 <__fp_cmp>
    1216:	08 f4       	brcc	.+2      	; 0x121a <__gesf2+0x8>
    1218:	8f ef       	ldi	r24, 0xFF	; 255
    121a:	08 95       	ret

0000121c <__mulsf3>:
    121c:	0e 94 21 09 	call	0x1242	; 0x1242 <__mulsf3x>
    1220:	0c 94 cf 08 	jmp	0x119e	; 0x119e <__fp_round>
    1224:	0e 94 c1 08 	call	0x1182	; 0x1182 <__fp_pscA>
    1228:	38 f0       	brcs	.+14     	; 0x1238 <__mulsf3+0x1c>
    122a:	0e 94 c8 08 	call	0x1190	; 0x1190 <__fp_pscB>
    122e:	20 f0       	brcs	.+8      	; 0x1238 <__mulsf3+0x1c>
    1230:	95 23       	and	r25, r21
    1232:	11 f0       	breq	.+4      	; 0x1238 <__mulsf3+0x1c>
    1234:	0c 94 b8 08 	jmp	0x1170	; 0x1170 <__fp_inf>
    1238:	0c 94 be 08 	jmp	0x117c	; 0x117c <__fp_nan>
    123c:	11 24       	eor	r1, r1
    123e:	0c 94 03 09 	jmp	0x1206	; 0x1206 <__fp_szero>

00001242 <__mulsf3x>:
    1242:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__fp_split3>
    1246:	70 f3       	brcs	.-36     	; 0x1224 <__mulsf3+0x8>

00001248 <__mulsf3_pse>:
    1248:	95 9f       	mul	r25, r21
    124a:	c1 f3       	breq	.-16     	; 0x123c <__mulsf3+0x20>
    124c:	95 0f       	add	r25, r21
    124e:	50 e0       	ldi	r21, 0x00	; 0
    1250:	55 1f       	adc	r21, r21
    1252:	62 9f       	mul	r22, r18
    1254:	f0 01       	movw	r30, r0
    1256:	72 9f       	mul	r23, r18
    1258:	bb 27       	eor	r27, r27
    125a:	f0 0d       	add	r31, r0
    125c:	b1 1d       	adc	r27, r1
    125e:	63 9f       	mul	r22, r19
    1260:	aa 27       	eor	r26, r26
    1262:	f0 0d       	add	r31, r0
    1264:	b1 1d       	adc	r27, r1
    1266:	aa 1f       	adc	r26, r26
    1268:	64 9f       	mul	r22, r20
    126a:	66 27       	eor	r22, r22
    126c:	b0 0d       	add	r27, r0
    126e:	a1 1d       	adc	r26, r1
    1270:	66 1f       	adc	r22, r22
    1272:	82 9f       	mul	r24, r18
    1274:	22 27       	eor	r18, r18
    1276:	b0 0d       	add	r27, r0
    1278:	a1 1d       	adc	r26, r1
    127a:	62 1f       	adc	r22, r18
    127c:	73 9f       	mul	r23, r19
    127e:	b0 0d       	add	r27, r0
    1280:	a1 1d       	adc	r26, r1
    1282:	62 1f       	adc	r22, r18
    1284:	83 9f       	mul	r24, r19
    1286:	a0 0d       	add	r26, r0
    1288:	61 1d       	adc	r22, r1
    128a:	22 1f       	adc	r18, r18
    128c:	74 9f       	mul	r23, r20
    128e:	33 27       	eor	r19, r19
    1290:	a0 0d       	add	r26, r0
    1292:	61 1d       	adc	r22, r1
    1294:	23 1f       	adc	r18, r19
    1296:	84 9f       	mul	r24, r20
    1298:	60 0d       	add	r22, r0
    129a:	21 1d       	adc	r18, r1
    129c:	82 2f       	mov	r24, r18
    129e:	76 2f       	mov	r23, r22
    12a0:	6a 2f       	mov	r22, r26
    12a2:	11 24       	eor	r1, r1
    12a4:	9f 57       	subi	r25, 0x7F	; 127
    12a6:	50 40       	sbci	r21, 0x00	; 0
    12a8:	9a f0       	brmi	.+38     	; 0x12d0 <__mulsf3_pse+0x88>
    12aa:	f1 f0       	breq	.+60     	; 0x12e8 <__mulsf3_pse+0xa0>
    12ac:	88 23       	and	r24, r24
    12ae:	4a f0       	brmi	.+18     	; 0x12c2 <__mulsf3_pse+0x7a>
    12b0:	ee 0f       	add	r30, r30
    12b2:	ff 1f       	adc	r31, r31
    12b4:	bb 1f       	adc	r27, r27
    12b6:	66 1f       	adc	r22, r22
    12b8:	77 1f       	adc	r23, r23
    12ba:	88 1f       	adc	r24, r24
    12bc:	91 50       	subi	r25, 0x01	; 1
    12be:	50 40       	sbci	r21, 0x00	; 0
    12c0:	a9 f7       	brne	.-22     	; 0x12ac <__mulsf3_pse+0x64>
    12c2:	9e 3f       	cpi	r25, 0xFE	; 254
    12c4:	51 05       	cpc	r21, r1
    12c6:	80 f0       	brcs	.+32     	; 0x12e8 <__mulsf3_pse+0xa0>
    12c8:	0c 94 b8 08 	jmp	0x1170	; 0x1170 <__fp_inf>
    12cc:	0c 94 03 09 	jmp	0x1206	; 0x1206 <__fp_szero>
    12d0:	5f 3f       	cpi	r21, 0xFF	; 255
    12d2:	e4 f3       	brlt	.-8      	; 0x12cc <__mulsf3_pse+0x84>
    12d4:	98 3e       	cpi	r25, 0xE8	; 232
    12d6:	d4 f3       	brlt	.-12     	; 0x12cc <__mulsf3_pse+0x84>
    12d8:	86 95       	lsr	r24
    12da:	77 95       	ror	r23
    12dc:	67 95       	ror	r22
    12de:	b7 95       	ror	r27
    12e0:	f7 95       	ror	r31
    12e2:	e7 95       	ror	r30
    12e4:	9f 5f       	subi	r25, 0xFF	; 255
    12e6:	c1 f7       	brne	.-16     	; 0x12d8 <__mulsf3_pse+0x90>
    12e8:	fe 2b       	or	r31, r30
    12ea:	88 0f       	add	r24, r24
    12ec:	91 1d       	adc	r25, r1
    12ee:	96 95       	lsr	r25
    12f0:	87 95       	ror	r24
    12f2:	97 f9       	bld	r25, 7
    12f4:	08 95       	ret

000012f6 <__divmodhi4>:
    12f6:	97 fb       	bst	r25, 7
    12f8:	07 2e       	mov	r0, r23
    12fa:	16 f4       	brtc	.+4      	; 0x1300 <__divmodhi4+0xa>
    12fc:	00 94       	com	r0
    12fe:	07 d0       	rcall	.+14     	; 0x130e <__divmodhi4_neg1>
    1300:	77 fd       	sbrc	r23, 7
    1302:	09 d0       	rcall	.+18     	; 0x1316 <__divmodhi4_neg2>
    1304:	0e 94 8f 09 	call	0x131e	; 0x131e <__udivmodhi4>
    1308:	07 fc       	sbrc	r0, 7
    130a:	05 d0       	rcall	.+10     	; 0x1316 <__divmodhi4_neg2>
    130c:	3e f4       	brtc	.+14     	; 0x131c <__divmodhi4_exit>

0000130e <__divmodhi4_neg1>:
    130e:	90 95       	com	r25
    1310:	81 95       	neg	r24
    1312:	9f 4f       	sbci	r25, 0xFF	; 255
    1314:	08 95       	ret

00001316 <__divmodhi4_neg2>:
    1316:	70 95       	com	r23
    1318:	61 95       	neg	r22
    131a:	7f 4f       	sbci	r23, 0xFF	; 255

0000131c <__divmodhi4_exit>:
    131c:	08 95       	ret

0000131e <__udivmodhi4>:
    131e:	aa 1b       	sub	r26, r26
    1320:	bb 1b       	sub	r27, r27
    1322:	51 e1       	ldi	r21, 0x11	; 17
    1324:	07 c0       	rjmp	.+14     	; 0x1334 <__udivmodhi4_ep>

00001326 <__udivmodhi4_loop>:
    1326:	aa 1f       	adc	r26, r26
    1328:	bb 1f       	adc	r27, r27
    132a:	a6 17       	cp	r26, r22
    132c:	b7 07       	cpc	r27, r23
    132e:	10 f0       	brcs	.+4      	; 0x1334 <__udivmodhi4_ep>
    1330:	a6 1b       	sub	r26, r22
    1332:	b7 0b       	sbc	r27, r23

00001334 <__udivmodhi4_ep>:
    1334:	88 1f       	adc	r24, r24
    1336:	99 1f       	adc	r25, r25
    1338:	5a 95       	dec	r21
    133a:	a9 f7       	brne	.-22     	; 0x1326 <__udivmodhi4_loop>
    133c:	80 95       	com	r24
    133e:	90 95       	com	r25
    1340:	bc 01       	movw	r22, r24
    1342:	cd 01       	movw	r24, r26
    1344:	08 95       	ret

00001346 <strcmp>:
    1346:	fb 01       	movw	r30, r22
    1348:	dc 01       	movw	r26, r24
    134a:	8d 91       	ld	r24, X+
    134c:	01 90       	ld	r0, Z+
    134e:	80 19       	sub	r24, r0
    1350:	01 10       	cpse	r0, r1
    1352:	d9 f3       	breq	.-10     	; 0x134a <strcmp+0x4>
    1354:	99 0b       	sbc	r25, r25
    1356:	08 95       	ret

00001358 <sprintf>:
    1358:	ae e0       	ldi	r26, 0x0E	; 14
    135a:	b0 e0       	ldi	r27, 0x00	; 0
    135c:	e2 eb       	ldi	r30, 0xB2	; 178
    135e:	f9 e0       	ldi	r31, 0x09	; 9
    1360:	0c 94 6d 0c 	jmp	0x18da	; 0x18da <__prologue_saves__+0x1c>
    1364:	0d 89       	ldd	r16, Y+21	; 0x15
    1366:	1e 89       	ldd	r17, Y+22	; 0x16
    1368:	86 e0       	ldi	r24, 0x06	; 6
    136a:	8c 83       	std	Y+4, r24	; 0x04
    136c:	1a 83       	std	Y+2, r17	; 0x02
    136e:	09 83       	std	Y+1, r16	; 0x01
    1370:	8f ef       	ldi	r24, 0xFF	; 255
    1372:	9f e7       	ldi	r25, 0x7F	; 127
    1374:	9e 83       	std	Y+6, r25	; 0x06
    1376:	8d 83       	std	Y+5, r24	; 0x05
    1378:	ae 01       	movw	r20, r28
    137a:	47 5e       	subi	r20, 0xE7	; 231
    137c:	5f 4f       	sbci	r21, 0xFF	; 255
    137e:	6f 89       	ldd	r22, Y+23	; 0x17
    1380:	78 8d       	ldd	r23, Y+24	; 0x18
    1382:	ce 01       	movw	r24, r28
    1384:	01 96       	adiw	r24, 0x01	; 1
    1386:	0e 94 ce 09 	call	0x139c	; 0x139c <vfprintf>
    138a:	ef 81       	ldd	r30, Y+7	; 0x07
    138c:	f8 85       	ldd	r31, Y+8	; 0x08
    138e:	e0 0f       	add	r30, r16
    1390:	f1 1f       	adc	r31, r17
    1392:	10 82       	st	Z, r1
    1394:	2e 96       	adiw	r28, 0x0e	; 14
    1396:	e4 e0       	ldi	r30, 0x04	; 4
    1398:	0c 94 89 0c 	jmp	0x1912	; 0x1912 <__epilogue_restores__+0x1c>

0000139c <vfprintf>:
    139c:	ab e0       	ldi	r26, 0x0B	; 11
    139e:	b0 e0       	ldi	r27, 0x00	; 0
    13a0:	e4 ed       	ldi	r30, 0xD4	; 212
    13a2:	f9 e0       	ldi	r31, 0x09	; 9
    13a4:	0c 94 5f 0c 	jmp	0x18be	; 0x18be <__prologue_saves__>
    13a8:	6c 01       	movw	r12, r24
    13aa:	7b 01       	movw	r14, r22
    13ac:	8a 01       	movw	r16, r20
    13ae:	fc 01       	movw	r30, r24
    13b0:	17 82       	std	Z+7, r1	; 0x07
    13b2:	16 82       	std	Z+6, r1	; 0x06
    13b4:	83 81       	ldd	r24, Z+3	; 0x03
    13b6:	81 ff       	sbrs	r24, 1
    13b8:	cc c1       	rjmp	.+920    	; 0x1752 <vfprintf+0x3b6>
    13ba:	ce 01       	movw	r24, r28
    13bc:	01 96       	adiw	r24, 0x01	; 1
    13be:	3c 01       	movw	r6, r24
    13c0:	f6 01       	movw	r30, r12
    13c2:	93 81       	ldd	r25, Z+3	; 0x03
    13c4:	f7 01       	movw	r30, r14
    13c6:	93 fd       	sbrc	r25, 3
    13c8:	85 91       	lpm	r24, Z+
    13ca:	93 ff       	sbrs	r25, 3
    13cc:	81 91       	ld	r24, Z+
    13ce:	7f 01       	movw	r14, r30
    13d0:	88 23       	and	r24, r24
    13d2:	09 f4       	brne	.+2      	; 0x13d6 <vfprintf+0x3a>
    13d4:	ba c1       	rjmp	.+884    	; 0x174a <vfprintf+0x3ae>
    13d6:	85 32       	cpi	r24, 0x25	; 37
    13d8:	39 f4       	brne	.+14     	; 0x13e8 <vfprintf+0x4c>
    13da:	93 fd       	sbrc	r25, 3
    13dc:	85 91       	lpm	r24, Z+
    13de:	93 ff       	sbrs	r25, 3
    13e0:	81 91       	ld	r24, Z+
    13e2:	7f 01       	movw	r14, r30
    13e4:	85 32       	cpi	r24, 0x25	; 37
    13e6:	29 f4       	brne	.+10     	; 0x13f2 <vfprintf+0x56>
    13e8:	b6 01       	movw	r22, r12
    13ea:	90 e0       	ldi	r25, 0x00	; 0
    13ec:	0e 94 c5 0b 	call	0x178a	; 0x178a <fputc>
    13f0:	e7 cf       	rjmp	.-50     	; 0x13c0 <vfprintf+0x24>
    13f2:	91 2c       	mov	r9, r1
    13f4:	21 2c       	mov	r2, r1
    13f6:	31 2c       	mov	r3, r1
    13f8:	ff e1       	ldi	r31, 0x1F	; 31
    13fa:	f3 15       	cp	r31, r3
    13fc:	d8 f0       	brcs	.+54     	; 0x1434 <vfprintf+0x98>
    13fe:	8b 32       	cpi	r24, 0x2B	; 43
    1400:	79 f0       	breq	.+30     	; 0x1420 <vfprintf+0x84>
    1402:	38 f4       	brcc	.+14     	; 0x1412 <vfprintf+0x76>
    1404:	80 32       	cpi	r24, 0x20	; 32
    1406:	79 f0       	breq	.+30     	; 0x1426 <vfprintf+0x8a>
    1408:	83 32       	cpi	r24, 0x23	; 35
    140a:	a1 f4       	brne	.+40     	; 0x1434 <vfprintf+0x98>
    140c:	23 2d       	mov	r18, r3
    140e:	20 61       	ori	r18, 0x10	; 16
    1410:	1d c0       	rjmp	.+58     	; 0x144c <vfprintf+0xb0>
    1412:	8d 32       	cpi	r24, 0x2D	; 45
    1414:	61 f0       	breq	.+24     	; 0x142e <vfprintf+0x92>
    1416:	80 33       	cpi	r24, 0x30	; 48
    1418:	69 f4       	brne	.+26     	; 0x1434 <vfprintf+0x98>
    141a:	23 2d       	mov	r18, r3
    141c:	21 60       	ori	r18, 0x01	; 1
    141e:	16 c0       	rjmp	.+44     	; 0x144c <vfprintf+0xb0>
    1420:	83 2d       	mov	r24, r3
    1422:	82 60       	ori	r24, 0x02	; 2
    1424:	38 2e       	mov	r3, r24
    1426:	e3 2d       	mov	r30, r3
    1428:	e4 60       	ori	r30, 0x04	; 4
    142a:	3e 2e       	mov	r3, r30
    142c:	2a c0       	rjmp	.+84     	; 0x1482 <vfprintf+0xe6>
    142e:	f3 2d       	mov	r31, r3
    1430:	f8 60       	ori	r31, 0x08	; 8
    1432:	1d c0       	rjmp	.+58     	; 0x146e <vfprintf+0xd2>
    1434:	37 fc       	sbrc	r3, 7
    1436:	2d c0       	rjmp	.+90     	; 0x1492 <vfprintf+0xf6>
    1438:	20 ed       	ldi	r18, 0xD0	; 208
    143a:	28 0f       	add	r18, r24
    143c:	2a 30       	cpi	r18, 0x0A	; 10
    143e:	40 f0       	brcs	.+16     	; 0x1450 <vfprintf+0xb4>
    1440:	8e 32       	cpi	r24, 0x2E	; 46
    1442:	b9 f4       	brne	.+46     	; 0x1472 <vfprintf+0xd6>
    1444:	36 fc       	sbrc	r3, 6
    1446:	81 c1       	rjmp	.+770    	; 0x174a <vfprintf+0x3ae>
    1448:	23 2d       	mov	r18, r3
    144a:	20 64       	ori	r18, 0x40	; 64
    144c:	32 2e       	mov	r3, r18
    144e:	19 c0       	rjmp	.+50     	; 0x1482 <vfprintf+0xe6>
    1450:	36 fe       	sbrs	r3, 6
    1452:	06 c0       	rjmp	.+12     	; 0x1460 <vfprintf+0xc4>
    1454:	8a e0       	ldi	r24, 0x0A	; 10
    1456:	98 9e       	mul	r9, r24
    1458:	20 0d       	add	r18, r0
    145a:	11 24       	eor	r1, r1
    145c:	92 2e       	mov	r9, r18
    145e:	11 c0       	rjmp	.+34     	; 0x1482 <vfprintf+0xe6>
    1460:	ea e0       	ldi	r30, 0x0A	; 10
    1462:	2e 9e       	mul	r2, r30
    1464:	20 0d       	add	r18, r0
    1466:	11 24       	eor	r1, r1
    1468:	22 2e       	mov	r2, r18
    146a:	f3 2d       	mov	r31, r3
    146c:	f0 62       	ori	r31, 0x20	; 32
    146e:	3f 2e       	mov	r3, r31
    1470:	08 c0       	rjmp	.+16     	; 0x1482 <vfprintf+0xe6>
    1472:	8c 36       	cpi	r24, 0x6C	; 108
    1474:	21 f4       	brne	.+8      	; 0x147e <vfprintf+0xe2>
    1476:	83 2d       	mov	r24, r3
    1478:	80 68       	ori	r24, 0x80	; 128
    147a:	38 2e       	mov	r3, r24
    147c:	02 c0       	rjmp	.+4      	; 0x1482 <vfprintf+0xe6>
    147e:	88 36       	cpi	r24, 0x68	; 104
    1480:	41 f4       	brne	.+16     	; 0x1492 <vfprintf+0xf6>
    1482:	f7 01       	movw	r30, r14
    1484:	93 fd       	sbrc	r25, 3
    1486:	85 91       	lpm	r24, Z+
    1488:	93 ff       	sbrs	r25, 3
    148a:	81 91       	ld	r24, Z+
    148c:	7f 01       	movw	r14, r30
    148e:	81 11       	cpse	r24, r1
    1490:	b3 cf       	rjmp	.-154    	; 0x13f8 <vfprintf+0x5c>
    1492:	98 2f       	mov	r25, r24
    1494:	9f 7d       	andi	r25, 0xDF	; 223
    1496:	95 54       	subi	r25, 0x45	; 69
    1498:	93 30       	cpi	r25, 0x03	; 3
    149a:	28 f4       	brcc	.+10     	; 0x14a6 <vfprintf+0x10a>
    149c:	0c 5f       	subi	r16, 0xFC	; 252
    149e:	1f 4f       	sbci	r17, 0xFF	; 255
    14a0:	9f e3       	ldi	r25, 0x3F	; 63
    14a2:	99 83       	std	Y+1, r25	; 0x01
    14a4:	0d c0       	rjmp	.+26     	; 0x14c0 <vfprintf+0x124>
    14a6:	83 36       	cpi	r24, 0x63	; 99
    14a8:	31 f0       	breq	.+12     	; 0x14b6 <vfprintf+0x11a>
    14aa:	83 37       	cpi	r24, 0x73	; 115
    14ac:	71 f0       	breq	.+28     	; 0x14ca <vfprintf+0x12e>
    14ae:	83 35       	cpi	r24, 0x53	; 83
    14b0:	09 f0       	breq	.+2      	; 0x14b4 <vfprintf+0x118>
    14b2:	59 c0       	rjmp	.+178    	; 0x1566 <vfprintf+0x1ca>
    14b4:	21 c0       	rjmp	.+66     	; 0x14f8 <vfprintf+0x15c>
    14b6:	f8 01       	movw	r30, r16
    14b8:	80 81       	ld	r24, Z
    14ba:	89 83       	std	Y+1, r24	; 0x01
    14bc:	0e 5f       	subi	r16, 0xFE	; 254
    14be:	1f 4f       	sbci	r17, 0xFF	; 255
    14c0:	88 24       	eor	r8, r8
    14c2:	83 94       	inc	r8
    14c4:	91 2c       	mov	r9, r1
    14c6:	53 01       	movw	r10, r6
    14c8:	13 c0       	rjmp	.+38     	; 0x14f0 <vfprintf+0x154>
    14ca:	28 01       	movw	r4, r16
    14cc:	f2 e0       	ldi	r31, 0x02	; 2
    14ce:	4f 0e       	add	r4, r31
    14d0:	51 1c       	adc	r5, r1
    14d2:	f8 01       	movw	r30, r16
    14d4:	a0 80       	ld	r10, Z
    14d6:	b1 80       	ldd	r11, Z+1	; 0x01
    14d8:	36 fe       	sbrs	r3, 6
    14da:	03 c0       	rjmp	.+6      	; 0x14e2 <vfprintf+0x146>
    14dc:	69 2d       	mov	r22, r9
    14de:	70 e0       	ldi	r23, 0x00	; 0
    14e0:	02 c0       	rjmp	.+4      	; 0x14e6 <vfprintf+0x14a>
    14e2:	6f ef       	ldi	r22, 0xFF	; 255
    14e4:	7f ef       	ldi	r23, 0xFF	; 255
    14e6:	c5 01       	movw	r24, r10
    14e8:	0e 94 ba 0b 	call	0x1774	; 0x1774 <strnlen>
    14ec:	4c 01       	movw	r8, r24
    14ee:	82 01       	movw	r16, r4
    14f0:	f3 2d       	mov	r31, r3
    14f2:	ff 77       	andi	r31, 0x7F	; 127
    14f4:	3f 2e       	mov	r3, r31
    14f6:	16 c0       	rjmp	.+44     	; 0x1524 <vfprintf+0x188>
    14f8:	28 01       	movw	r4, r16
    14fa:	22 e0       	ldi	r18, 0x02	; 2
    14fc:	42 0e       	add	r4, r18
    14fe:	51 1c       	adc	r5, r1
    1500:	f8 01       	movw	r30, r16
    1502:	a0 80       	ld	r10, Z
    1504:	b1 80       	ldd	r11, Z+1	; 0x01
    1506:	36 fe       	sbrs	r3, 6
    1508:	03 c0       	rjmp	.+6      	; 0x1510 <vfprintf+0x174>
    150a:	69 2d       	mov	r22, r9
    150c:	70 e0       	ldi	r23, 0x00	; 0
    150e:	02 c0       	rjmp	.+4      	; 0x1514 <vfprintf+0x178>
    1510:	6f ef       	ldi	r22, 0xFF	; 255
    1512:	7f ef       	ldi	r23, 0xFF	; 255
    1514:	c5 01       	movw	r24, r10
    1516:	0e 94 af 0b 	call	0x175e	; 0x175e <strnlen_P>
    151a:	4c 01       	movw	r8, r24
    151c:	f3 2d       	mov	r31, r3
    151e:	f0 68       	ori	r31, 0x80	; 128
    1520:	3f 2e       	mov	r3, r31
    1522:	82 01       	movw	r16, r4
    1524:	33 fc       	sbrc	r3, 3
    1526:	1b c0       	rjmp	.+54     	; 0x155e <vfprintf+0x1c2>
    1528:	82 2d       	mov	r24, r2
    152a:	90 e0       	ldi	r25, 0x00	; 0
    152c:	88 16       	cp	r8, r24
    152e:	99 06       	cpc	r9, r25
    1530:	b0 f4       	brcc	.+44     	; 0x155e <vfprintf+0x1c2>
    1532:	b6 01       	movw	r22, r12
    1534:	80 e2       	ldi	r24, 0x20	; 32
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	0e 94 c5 0b 	call	0x178a	; 0x178a <fputc>
    153c:	2a 94       	dec	r2
    153e:	f4 cf       	rjmp	.-24     	; 0x1528 <vfprintf+0x18c>
    1540:	f5 01       	movw	r30, r10
    1542:	37 fc       	sbrc	r3, 7
    1544:	85 91       	lpm	r24, Z+
    1546:	37 fe       	sbrs	r3, 7
    1548:	81 91       	ld	r24, Z+
    154a:	5f 01       	movw	r10, r30
    154c:	b6 01       	movw	r22, r12
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	0e 94 c5 0b 	call	0x178a	; 0x178a <fputc>
    1554:	21 10       	cpse	r2, r1
    1556:	2a 94       	dec	r2
    1558:	21 e0       	ldi	r18, 0x01	; 1
    155a:	82 1a       	sub	r8, r18
    155c:	91 08       	sbc	r9, r1
    155e:	81 14       	cp	r8, r1
    1560:	91 04       	cpc	r9, r1
    1562:	71 f7       	brne	.-36     	; 0x1540 <vfprintf+0x1a4>
    1564:	e8 c0       	rjmp	.+464    	; 0x1736 <vfprintf+0x39a>
    1566:	84 36       	cpi	r24, 0x64	; 100
    1568:	11 f0       	breq	.+4      	; 0x156e <vfprintf+0x1d2>
    156a:	89 36       	cpi	r24, 0x69	; 105
    156c:	41 f5       	brne	.+80     	; 0x15be <vfprintf+0x222>
    156e:	f8 01       	movw	r30, r16
    1570:	37 fe       	sbrs	r3, 7
    1572:	07 c0       	rjmp	.+14     	; 0x1582 <vfprintf+0x1e6>
    1574:	60 81       	ld	r22, Z
    1576:	71 81       	ldd	r23, Z+1	; 0x01
    1578:	82 81       	ldd	r24, Z+2	; 0x02
    157a:	93 81       	ldd	r25, Z+3	; 0x03
    157c:	0c 5f       	subi	r16, 0xFC	; 252
    157e:	1f 4f       	sbci	r17, 0xFF	; 255
    1580:	08 c0       	rjmp	.+16     	; 0x1592 <vfprintf+0x1f6>
    1582:	60 81       	ld	r22, Z
    1584:	71 81       	ldd	r23, Z+1	; 0x01
    1586:	07 2e       	mov	r0, r23
    1588:	00 0c       	add	r0, r0
    158a:	88 0b       	sbc	r24, r24
    158c:	99 0b       	sbc	r25, r25
    158e:	0e 5f       	subi	r16, 0xFE	; 254
    1590:	1f 4f       	sbci	r17, 0xFF	; 255
    1592:	f3 2d       	mov	r31, r3
    1594:	ff 76       	andi	r31, 0x6F	; 111
    1596:	3f 2e       	mov	r3, r31
    1598:	97 ff       	sbrs	r25, 7
    159a:	09 c0       	rjmp	.+18     	; 0x15ae <vfprintf+0x212>
    159c:	90 95       	com	r25
    159e:	80 95       	com	r24
    15a0:	70 95       	com	r23
    15a2:	61 95       	neg	r22
    15a4:	7f 4f       	sbci	r23, 0xFF	; 255
    15a6:	8f 4f       	sbci	r24, 0xFF	; 255
    15a8:	9f 4f       	sbci	r25, 0xFF	; 255
    15aa:	f0 68       	ori	r31, 0x80	; 128
    15ac:	3f 2e       	mov	r3, r31
    15ae:	2a e0       	ldi	r18, 0x0A	; 10
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	a3 01       	movw	r20, r6
    15b4:	0e 94 01 0c 	call	0x1802	; 0x1802 <__ultoa_invert>
    15b8:	88 2e       	mov	r8, r24
    15ba:	86 18       	sub	r8, r6
    15bc:	45 c0       	rjmp	.+138    	; 0x1648 <vfprintf+0x2ac>
    15be:	85 37       	cpi	r24, 0x75	; 117
    15c0:	31 f4       	brne	.+12     	; 0x15ce <vfprintf+0x232>
    15c2:	23 2d       	mov	r18, r3
    15c4:	2f 7e       	andi	r18, 0xEF	; 239
    15c6:	b2 2e       	mov	r11, r18
    15c8:	2a e0       	ldi	r18, 0x0A	; 10
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	25 c0       	rjmp	.+74     	; 0x1618 <vfprintf+0x27c>
    15ce:	93 2d       	mov	r25, r3
    15d0:	99 7f       	andi	r25, 0xF9	; 249
    15d2:	b9 2e       	mov	r11, r25
    15d4:	8f 36       	cpi	r24, 0x6F	; 111
    15d6:	c1 f0       	breq	.+48     	; 0x1608 <vfprintf+0x26c>
    15d8:	18 f4       	brcc	.+6      	; 0x15e0 <vfprintf+0x244>
    15da:	88 35       	cpi	r24, 0x58	; 88
    15dc:	79 f0       	breq	.+30     	; 0x15fc <vfprintf+0x260>
    15de:	b5 c0       	rjmp	.+362    	; 0x174a <vfprintf+0x3ae>
    15e0:	80 37       	cpi	r24, 0x70	; 112
    15e2:	19 f0       	breq	.+6      	; 0x15ea <vfprintf+0x24e>
    15e4:	88 37       	cpi	r24, 0x78	; 120
    15e6:	21 f0       	breq	.+8      	; 0x15f0 <vfprintf+0x254>
    15e8:	b0 c0       	rjmp	.+352    	; 0x174a <vfprintf+0x3ae>
    15ea:	e9 2f       	mov	r30, r25
    15ec:	e0 61       	ori	r30, 0x10	; 16
    15ee:	be 2e       	mov	r11, r30
    15f0:	b4 fe       	sbrs	r11, 4
    15f2:	0d c0       	rjmp	.+26     	; 0x160e <vfprintf+0x272>
    15f4:	fb 2d       	mov	r31, r11
    15f6:	f4 60       	ori	r31, 0x04	; 4
    15f8:	bf 2e       	mov	r11, r31
    15fa:	09 c0       	rjmp	.+18     	; 0x160e <vfprintf+0x272>
    15fc:	34 fe       	sbrs	r3, 4
    15fe:	0a c0       	rjmp	.+20     	; 0x1614 <vfprintf+0x278>
    1600:	29 2f       	mov	r18, r25
    1602:	26 60       	ori	r18, 0x06	; 6
    1604:	b2 2e       	mov	r11, r18
    1606:	06 c0       	rjmp	.+12     	; 0x1614 <vfprintf+0x278>
    1608:	28 e0       	ldi	r18, 0x08	; 8
    160a:	30 e0       	ldi	r19, 0x00	; 0
    160c:	05 c0       	rjmp	.+10     	; 0x1618 <vfprintf+0x27c>
    160e:	20 e1       	ldi	r18, 0x10	; 16
    1610:	30 e0       	ldi	r19, 0x00	; 0
    1612:	02 c0       	rjmp	.+4      	; 0x1618 <vfprintf+0x27c>
    1614:	20 e1       	ldi	r18, 0x10	; 16
    1616:	32 e0       	ldi	r19, 0x02	; 2
    1618:	f8 01       	movw	r30, r16
    161a:	b7 fe       	sbrs	r11, 7
    161c:	07 c0       	rjmp	.+14     	; 0x162c <vfprintf+0x290>
    161e:	60 81       	ld	r22, Z
    1620:	71 81       	ldd	r23, Z+1	; 0x01
    1622:	82 81       	ldd	r24, Z+2	; 0x02
    1624:	93 81       	ldd	r25, Z+3	; 0x03
    1626:	0c 5f       	subi	r16, 0xFC	; 252
    1628:	1f 4f       	sbci	r17, 0xFF	; 255
    162a:	06 c0       	rjmp	.+12     	; 0x1638 <vfprintf+0x29c>
    162c:	60 81       	ld	r22, Z
    162e:	71 81       	ldd	r23, Z+1	; 0x01
    1630:	80 e0       	ldi	r24, 0x00	; 0
    1632:	90 e0       	ldi	r25, 0x00	; 0
    1634:	0e 5f       	subi	r16, 0xFE	; 254
    1636:	1f 4f       	sbci	r17, 0xFF	; 255
    1638:	a3 01       	movw	r20, r6
    163a:	0e 94 01 0c 	call	0x1802	; 0x1802 <__ultoa_invert>
    163e:	88 2e       	mov	r8, r24
    1640:	86 18       	sub	r8, r6
    1642:	fb 2d       	mov	r31, r11
    1644:	ff 77       	andi	r31, 0x7F	; 127
    1646:	3f 2e       	mov	r3, r31
    1648:	36 fe       	sbrs	r3, 6
    164a:	0d c0       	rjmp	.+26     	; 0x1666 <vfprintf+0x2ca>
    164c:	23 2d       	mov	r18, r3
    164e:	2e 7f       	andi	r18, 0xFE	; 254
    1650:	a2 2e       	mov	r10, r18
    1652:	89 14       	cp	r8, r9
    1654:	58 f4       	brcc	.+22     	; 0x166c <vfprintf+0x2d0>
    1656:	34 fe       	sbrs	r3, 4
    1658:	0b c0       	rjmp	.+22     	; 0x1670 <vfprintf+0x2d4>
    165a:	32 fc       	sbrc	r3, 2
    165c:	09 c0       	rjmp	.+18     	; 0x1670 <vfprintf+0x2d4>
    165e:	83 2d       	mov	r24, r3
    1660:	8e 7e       	andi	r24, 0xEE	; 238
    1662:	a8 2e       	mov	r10, r24
    1664:	05 c0       	rjmp	.+10     	; 0x1670 <vfprintf+0x2d4>
    1666:	b8 2c       	mov	r11, r8
    1668:	a3 2c       	mov	r10, r3
    166a:	03 c0       	rjmp	.+6      	; 0x1672 <vfprintf+0x2d6>
    166c:	b8 2c       	mov	r11, r8
    166e:	01 c0       	rjmp	.+2      	; 0x1672 <vfprintf+0x2d6>
    1670:	b9 2c       	mov	r11, r9
    1672:	a4 fe       	sbrs	r10, 4
    1674:	0f c0       	rjmp	.+30     	; 0x1694 <vfprintf+0x2f8>
    1676:	fe 01       	movw	r30, r28
    1678:	e8 0d       	add	r30, r8
    167a:	f1 1d       	adc	r31, r1
    167c:	80 81       	ld	r24, Z
    167e:	80 33       	cpi	r24, 0x30	; 48
    1680:	21 f4       	brne	.+8      	; 0x168a <vfprintf+0x2ee>
    1682:	9a 2d       	mov	r25, r10
    1684:	99 7e       	andi	r25, 0xE9	; 233
    1686:	a9 2e       	mov	r10, r25
    1688:	09 c0       	rjmp	.+18     	; 0x169c <vfprintf+0x300>
    168a:	a2 fe       	sbrs	r10, 2
    168c:	06 c0       	rjmp	.+12     	; 0x169a <vfprintf+0x2fe>
    168e:	b3 94       	inc	r11
    1690:	b3 94       	inc	r11
    1692:	04 c0       	rjmp	.+8      	; 0x169c <vfprintf+0x300>
    1694:	8a 2d       	mov	r24, r10
    1696:	86 78       	andi	r24, 0x86	; 134
    1698:	09 f0       	breq	.+2      	; 0x169c <vfprintf+0x300>
    169a:	b3 94       	inc	r11
    169c:	a3 fc       	sbrc	r10, 3
    169e:	11 c0       	rjmp	.+34     	; 0x16c2 <vfprintf+0x326>
    16a0:	a0 fe       	sbrs	r10, 0
    16a2:	06 c0       	rjmp	.+12     	; 0x16b0 <vfprintf+0x314>
    16a4:	b2 14       	cp	r11, r2
    16a6:	88 f4       	brcc	.+34     	; 0x16ca <vfprintf+0x32e>
    16a8:	28 0c       	add	r2, r8
    16aa:	92 2c       	mov	r9, r2
    16ac:	9b 18       	sub	r9, r11
    16ae:	0e c0       	rjmp	.+28     	; 0x16cc <vfprintf+0x330>
    16b0:	b2 14       	cp	r11, r2
    16b2:	60 f4       	brcc	.+24     	; 0x16cc <vfprintf+0x330>
    16b4:	b6 01       	movw	r22, r12
    16b6:	80 e2       	ldi	r24, 0x20	; 32
    16b8:	90 e0       	ldi	r25, 0x00	; 0
    16ba:	0e 94 c5 0b 	call	0x178a	; 0x178a <fputc>
    16be:	b3 94       	inc	r11
    16c0:	f7 cf       	rjmp	.-18     	; 0x16b0 <vfprintf+0x314>
    16c2:	b2 14       	cp	r11, r2
    16c4:	18 f4       	brcc	.+6      	; 0x16cc <vfprintf+0x330>
    16c6:	2b 18       	sub	r2, r11
    16c8:	02 c0       	rjmp	.+4      	; 0x16ce <vfprintf+0x332>
    16ca:	98 2c       	mov	r9, r8
    16cc:	21 2c       	mov	r2, r1
    16ce:	a4 fe       	sbrs	r10, 4
    16d0:	10 c0       	rjmp	.+32     	; 0x16f2 <vfprintf+0x356>
    16d2:	b6 01       	movw	r22, r12
    16d4:	80 e3       	ldi	r24, 0x30	; 48
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	0e 94 c5 0b 	call	0x178a	; 0x178a <fputc>
    16dc:	a2 fe       	sbrs	r10, 2
    16de:	17 c0       	rjmp	.+46     	; 0x170e <vfprintf+0x372>
    16e0:	a1 fc       	sbrc	r10, 1
    16e2:	03 c0       	rjmp	.+6      	; 0x16ea <vfprintf+0x34e>
    16e4:	88 e7       	ldi	r24, 0x78	; 120
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	02 c0       	rjmp	.+4      	; 0x16ee <vfprintf+0x352>
    16ea:	88 e5       	ldi	r24, 0x58	; 88
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	b6 01       	movw	r22, r12
    16f0:	0c c0       	rjmp	.+24     	; 0x170a <vfprintf+0x36e>
    16f2:	8a 2d       	mov	r24, r10
    16f4:	86 78       	andi	r24, 0x86	; 134
    16f6:	59 f0       	breq	.+22     	; 0x170e <vfprintf+0x372>
    16f8:	a1 fe       	sbrs	r10, 1
    16fa:	02 c0       	rjmp	.+4      	; 0x1700 <vfprintf+0x364>
    16fc:	8b e2       	ldi	r24, 0x2B	; 43
    16fe:	01 c0       	rjmp	.+2      	; 0x1702 <vfprintf+0x366>
    1700:	80 e2       	ldi	r24, 0x20	; 32
    1702:	a7 fc       	sbrc	r10, 7
    1704:	8d e2       	ldi	r24, 0x2D	; 45
    1706:	b6 01       	movw	r22, r12
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	0e 94 c5 0b 	call	0x178a	; 0x178a <fputc>
    170e:	89 14       	cp	r8, r9
    1710:	38 f4       	brcc	.+14     	; 0x1720 <vfprintf+0x384>
    1712:	b6 01       	movw	r22, r12
    1714:	80 e3       	ldi	r24, 0x30	; 48
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	0e 94 c5 0b 	call	0x178a	; 0x178a <fputc>
    171c:	9a 94       	dec	r9
    171e:	f7 cf       	rjmp	.-18     	; 0x170e <vfprintf+0x372>
    1720:	8a 94       	dec	r8
    1722:	f3 01       	movw	r30, r6
    1724:	e8 0d       	add	r30, r8
    1726:	f1 1d       	adc	r31, r1
    1728:	80 81       	ld	r24, Z
    172a:	b6 01       	movw	r22, r12
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	0e 94 c5 0b 	call	0x178a	; 0x178a <fputc>
    1732:	81 10       	cpse	r8, r1
    1734:	f5 cf       	rjmp	.-22     	; 0x1720 <vfprintf+0x384>
    1736:	22 20       	and	r2, r2
    1738:	09 f4       	brne	.+2      	; 0x173c <vfprintf+0x3a0>
    173a:	42 ce       	rjmp	.-892    	; 0x13c0 <vfprintf+0x24>
    173c:	b6 01       	movw	r22, r12
    173e:	80 e2       	ldi	r24, 0x20	; 32
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	0e 94 c5 0b 	call	0x178a	; 0x178a <fputc>
    1746:	2a 94       	dec	r2
    1748:	f6 cf       	rjmp	.-20     	; 0x1736 <vfprintf+0x39a>
    174a:	f6 01       	movw	r30, r12
    174c:	86 81       	ldd	r24, Z+6	; 0x06
    174e:	97 81       	ldd	r25, Z+7	; 0x07
    1750:	02 c0       	rjmp	.+4      	; 0x1756 <vfprintf+0x3ba>
    1752:	8f ef       	ldi	r24, 0xFF	; 255
    1754:	9f ef       	ldi	r25, 0xFF	; 255
    1756:	2b 96       	adiw	r28, 0x0b	; 11
    1758:	e2 e1       	ldi	r30, 0x12	; 18
    175a:	0c 94 7b 0c 	jmp	0x18f6	; 0x18f6 <__epilogue_restores__>

0000175e <strnlen_P>:
    175e:	fc 01       	movw	r30, r24
    1760:	05 90       	lpm	r0, Z+
    1762:	61 50       	subi	r22, 0x01	; 1
    1764:	70 40       	sbci	r23, 0x00	; 0
    1766:	01 10       	cpse	r0, r1
    1768:	d8 f7       	brcc	.-10     	; 0x1760 <strnlen_P+0x2>
    176a:	80 95       	com	r24
    176c:	90 95       	com	r25
    176e:	8e 0f       	add	r24, r30
    1770:	9f 1f       	adc	r25, r31
    1772:	08 95       	ret

00001774 <strnlen>:
    1774:	fc 01       	movw	r30, r24
    1776:	61 50       	subi	r22, 0x01	; 1
    1778:	70 40       	sbci	r23, 0x00	; 0
    177a:	01 90       	ld	r0, Z+
    177c:	01 10       	cpse	r0, r1
    177e:	d8 f7       	brcc	.-10     	; 0x1776 <strnlen+0x2>
    1780:	80 95       	com	r24
    1782:	90 95       	com	r25
    1784:	8e 0f       	add	r24, r30
    1786:	9f 1f       	adc	r25, r31
    1788:	08 95       	ret

0000178a <fputc>:
    178a:	0f 93       	push	r16
    178c:	1f 93       	push	r17
    178e:	cf 93       	push	r28
    1790:	df 93       	push	r29
    1792:	fb 01       	movw	r30, r22
    1794:	23 81       	ldd	r18, Z+3	; 0x03
    1796:	21 fd       	sbrc	r18, 1
    1798:	03 c0       	rjmp	.+6      	; 0x17a0 <fputc+0x16>
    179a:	8f ef       	ldi	r24, 0xFF	; 255
    179c:	9f ef       	ldi	r25, 0xFF	; 255
    179e:	2c c0       	rjmp	.+88     	; 0x17f8 <fputc+0x6e>
    17a0:	22 ff       	sbrs	r18, 2
    17a2:	16 c0       	rjmp	.+44     	; 0x17d0 <fputc+0x46>
    17a4:	46 81       	ldd	r20, Z+6	; 0x06
    17a6:	57 81       	ldd	r21, Z+7	; 0x07
    17a8:	24 81       	ldd	r18, Z+4	; 0x04
    17aa:	35 81       	ldd	r19, Z+5	; 0x05
    17ac:	42 17       	cp	r20, r18
    17ae:	53 07       	cpc	r21, r19
    17b0:	44 f4       	brge	.+16     	; 0x17c2 <fputc+0x38>
    17b2:	a0 81       	ld	r26, Z
    17b4:	b1 81       	ldd	r27, Z+1	; 0x01
    17b6:	9d 01       	movw	r18, r26
    17b8:	2f 5f       	subi	r18, 0xFF	; 255
    17ba:	3f 4f       	sbci	r19, 0xFF	; 255
    17bc:	31 83       	std	Z+1, r19	; 0x01
    17be:	20 83       	st	Z, r18
    17c0:	8c 93       	st	X, r24
    17c2:	26 81       	ldd	r18, Z+6	; 0x06
    17c4:	37 81       	ldd	r19, Z+7	; 0x07
    17c6:	2f 5f       	subi	r18, 0xFF	; 255
    17c8:	3f 4f       	sbci	r19, 0xFF	; 255
    17ca:	37 83       	std	Z+7, r19	; 0x07
    17cc:	26 83       	std	Z+6, r18	; 0x06
    17ce:	14 c0       	rjmp	.+40     	; 0x17f8 <fputc+0x6e>
    17d0:	8b 01       	movw	r16, r22
    17d2:	ec 01       	movw	r28, r24
    17d4:	fb 01       	movw	r30, r22
    17d6:	00 84       	ldd	r0, Z+8	; 0x08
    17d8:	f1 85       	ldd	r31, Z+9	; 0x09
    17da:	e0 2d       	mov	r30, r0
    17dc:	09 95       	icall
    17de:	89 2b       	or	r24, r25
    17e0:	e1 f6       	brne	.-72     	; 0x179a <fputc+0x10>
    17e2:	d8 01       	movw	r26, r16
    17e4:	16 96       	adiw	r26, 0x06	; 6
    17e6:	8d 91       	ld	r24, X+
    17e8:	9c 91       	ld	r25, X
    17ea:	17 97       	sbiw	r26, 0x07	; 7
    17ec:	01 96       	adiw	r24, 0x01	; 1
    17ee:	17 96       	adiw	r26, 0x07	; 7
    17f0:	9c 93       	st	X, r25
    17f2:	8e 93       	st	-X, r24
    17f4:	16 97       	sbiw	r26, 0x06	; 6
    17f6:	ce 01       	movw	r24, r28
    17f8:	df 91       	pop	r29
    17fa:	cf 91       	pop	r28
    17fc:	1f 91       	pop	r17
    17fe:	0f 91       	pop	r16
    1800:	08 95       	ret

00001802 <__ultoa_invert>:
    1802:	fa 01       	movw	r30, r20
    1804:	aa 27       	eor	r26, r26
    1806:	28 30       	cpi	r18, 0x08	; 8
    1808:	51 f1       	breq	.+84     	; 0x185e <__ultoa_invert+0x5c>
    180a:	20 31       	cpi	r18, 0x10	; 16
    180c:	81 f1       	breq	.+96     	; 0x186e <__ultoa_invert+0x6c>
    180e:	e8 94       	clt
    1810:	6f 93       	push	r22
    1812:	6e 7f       	andi	r22, 0xFE	; 254
    1814:	6e 5f       	subi	r22, 0xFE	; 254
    1816:	7f 4f       	sbci	r23, 0xFF	; 255
    1818:	8f 4f       	sbci	r24, 0xFF	; 255
    181a:	9f 4f       	sbci	r25, 0xFF	; 255
    181c:	af 4f       	sbci	r26, 0xFF	; 255
    181e:	b1 e0       	ldi	r27, 0x01	; 1
    1820:	3e d0       	rcall	.+124    	; 0x189e <__ultoa_invert+0x9c>
    1822:	b4 e0       	ldi	r27, 0x04	; 4
    1824:	3c d0       	rcall	.+120    	; 0x189e <__ultoa_invert+0x9c>
    1826:	67 0f       	add	r22, r23
    1828:	78 1f       	adc	r23, r24
    182a:	89 1f       	adc	r24, r25
    182c:	9a 1f       	adc	r25, r26
    182e:	a1 1d       	adc	r26, r1
    1830:	68 0f       	add	r22, r24
    1832:	79 1f       	adc	r23, r25
    1834:	8a 1f       	adc	r24, r26
    1836:	91 1d       	adc	r25, r1
    1838:	a1 1d       	adc	r26, r1
    183a:	6a 0f       	add	r22, r26
    183c:	71 1d       	adc	r23, r1
    183e:	81 1d       	adc	r24, r1
    1840:	91 1d       	adc	r25, r1
    1842:	a1 1d       	adc	r26, r1
    1844:	20 d0       	rcall	.+64     	; 0x1886 <__ultoa_invert+0x84>
    1846:	09 f4       	brne	.+2      	; 0x184a <__ultoa_invert+0x48>
    1848:	68 94       	set
    184a:	3f 91       	pop	r19
    184c:	2a e0       	ldi	r18, 0x0A	; 10
    184e:	26 9f       	mul	r18, r22
    1850:	11 24       	eor	r1, r1
    1852:	30 19       	sub	r19, r0
    1854:	30 5d       	subi	r19, 0xD0	; 208
    1856:	31 93       	st	Z+, r19
    1858:	de f6       	brtc	.-74     	; 0x1810 <__ultoa_invert+0xe>
    185a:	cf 01       	movw	r24, r30
    185c:	08 95       	ret
    185e:	46 2f       	mov	r20, r22
    1860:	47 70       	andi	r20, 0x07	; 7
    1862:	40 5d       	subi	r20, 0xD0	; 208
    1864:	41 93       	st	Z+, r20
    1866:	b3 e0       	ldi	r27, 0x03	; 3
    1868:	0f d0       	rcall	.+30     	; 0x1888 <__ultoa_invert+0x86>
    186a:	c9 f7       	brne	.-14     	; 0x185e <__ultoa_invert+0x5c>
    186c:	f6 cf       	rjmp	.-20     	; 0x185a <__ultoa_invert+0x58>
    186e:	46 2f       	mov	r20, r22
    1870:	4f 70       	andi	r20, 0x0F	; 15
    1872:	40 5d       	subi	r20, 0xD0	; 208
    1874:	4a 33       	cpi	r20, 0x3A	; 58
    1876:	18 f0       	brcs	.+6      	; 0x187e <__ultoa_invert+0x7c>
    1878:	49 5d       	subi	r20, 0xD9	; 217
    187a:	31 fd       	sbrc	r19, 1
    187c:	40 52       	subi	r20, 0x20	; 32
    187e:	41 93       	st	Z+, r20
    1880:	02 d0       	rcall	.+4      	; 0x1886 <__ultoa_invert+0x84>
    1882:	a9 f7       	brne	.-22     	; 0x186e <__ultoa_invert+0x6c>
    1884:	ea cf       	rjmp	.-44     	; 0x185a <__ultoa_invert+0x58>
    1886:	b4 e0       	ldi	r27, 0x04	; 4
    1888:	a6 95       	lsr	r26
    188a:	97 95       	ror	r25
    188c:	87 95       	ror	r24
    188e:	77 95       	ror	r23
    1890:	67 95       	ror	r22
    1892:	ba 95       	dec	r27
    1894:	c9 f7       	brne	.-14     	; 0x1888 <__ultoa_invert+0x86>
    1896:	00 97       	sbiw	r24, 0x00	; 0
    1898:	61 05       	cpc	r22, r1
    189a:	71 05       	cpc	r23, r1
    189c:	08 95       	ret
    189e:	9b 01       	movw	r18, r22
    18a0:	ac 01       	movw	r20, r24
    18a2:	0a 2e       	mov	r0, r26
    18a4:	06 94       	lsr	r0
    18a6:	57 95       	ror	r21
    18a8:	47 95       	ror	r20
    18aa:	37 95       	ror	r19
    18ac:	27 95       	ror	r18
    18ae:	ba 95       	dec	r27
    18b0:	c9 f7       	brne	.-14     	; 0x18a4 <__ultoa_invert+0xa2>
    18b2:	62 0f       	add	r22, r18
    18b4:	73 1f       	adc	r23, r19
    18b6:	84 1f       	adc	r24, r20
    18b8:	95 1f       	adc	r25, r21
    18ba:	a0 1d       	adc	r26, r0
    18bc:	08 95       	ret

000018be <__prologue_saves__>:
    18be:	2f 92       	push	r2
    18c0:	3f 92       	push	r3
    18c2:	4f 92       	push	r4
    18c4:	5f 92       	push	r5
    18c6:	6f 92       	push	r6
    18c8:	7f 92       	push	r7
    18ca:	8f 92       	push	r8
    18cc:	9f 92       	push	r9
    18ce:	af 92       	push	r10
    18d0:	bf 92       	push	r11
    18d2:	cf 92       	push	r12
    18d4:	df 92       	push	r13
    18d6:	ef 92       	push	r14
    18d8:	ff 92       	push	r15
    18da:	0f 93       	push	r16
    18dc:	1f 93       	push	r17
    18de:	cf 93       	push	r28
    18e0:	df 93       	push	r29
    18e2:	cd b7       	in	r28, 0x3d	; 61
    18e4:	de b7       	in	r29, 0x3e	; 62
    18e6:	ca 1b       	sub	r28, r26
    18e8:	db 0b       	sbc	r29, r27
    18ea:	0f b6       	in	r0, 0x3f	; 63
    18ec:	f8 94       	cli
    18ee:	de bf       	out	0x3e, r29	; 62
    18f0:	0f be       	out	0x3f, r0	; 63
    18f2:	cd bf       	out	0x3d, r28	; 61
    18f4:	09 94       	ijmp

000018f6 <__epilogue_restores__>:
    18f6:	2a 88       	ldd	r2, Y+18	; 0x12
    18f8:	39 88       	ldd	r3, Y+17	; 0x11
    18fa:	48 88       	ldd	r4, Y+16	; 0x10
    18fc:	5f 84       	ldd	r5, Y+15	; 0x0f
    18fe:	6e 84       	ldd	r6, Y+14	; 0x0e
    1900:	7d 84       	ldd	r7, Y+13	; 0x0d
    1902:	8c 84       	ldd	r8, Y+12	; 0x0c
    1904:	9b 84       	ldd	r9, Y+11	; 0x0b
    1906:	aa 84       	ldd	r10, Y+10	; 0x0a
    1908:	b9 84       	ldd	r11, Y+9	; 0x09
    190a:	c8 84       	ldd	r12, Y+8	; 0x08
    190c:	df 80       	ldd	r13, Y+7	; 0x07
    190e:	ee 80       	ldd	r14, Y+6	; 0x06
    1910:	fd 80       	ldd	r15, Y+5	; 0x05
    1912:	0c 81       	ldd	r16, Y+4	; 0x04
    1914:	1b 81       	ldd	r17, Y+3	; 0x03
    1916:	aa 81       	ldd	r26, Y+2	; 0x02
    1918:	b9 81       	ldd	r27, Y+1	; 0x01
    191a:	ce 0f       	add	r28, r30
    191c:	d1 1d       	adc	r29, r1
    191e:	0f b6       	in	r0, 0x3f	; 63
    1920:	f8 94       	cli
    1922:	de bf       	out	0x3e, r29	; 62
    1924:	0f be       	out	0x3f, r0	; 63
    1926:	cd bf       	out	0x3d, r28	; 61
    1928:	ed 01       	movw	r28, r26
    192a:	08 95       	ret

0000192c <_exit>:
    192c:	f8 94       	cli

0000192e <__stop_program>:
    192e:	ff cf       	rjmp	.-2      	; 0x192e <__stop_program>
